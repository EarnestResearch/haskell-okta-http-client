{-
   Okta API

   Allows customers to easily access the Okta API

   OpenAPI Version: 3.0.1
   Okta API API version: 1.0.0
   Contact: devex-public@okta.com
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Okta.API.Org
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Okta.API.Org where

import Okta.Core
import Okta.MimeTypes
import Okta.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Org

-- *** extendOktaSupport

-- | @POST \/api\/v1\/org\/privacy\/oktaSupport\/extend@
-- 
-- Extend Okta Support
-- 
-- Extends the length of time that Okta Support can access your org by 24 hours. This means that 24 hours are added to the remaining access time.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
extendOktaSupport
  :: OktaRequest ExtendOktaSupport MimeNoContent OrgOktaSupportSettingsObj MimeJSON
extendOktaSupport =
  _mkRequest "POST" ["/api/v1/org/privacy/oktaSupport/extend"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data ExtendOktaSupport  
-- | @application/json@
instance Produces ExtendOktaSupport MimeJSON


-- *** getOktaCommunicationSettings

-- | @GET \/api\/v1\/org\/privacy\/oktaCommunication@
-- 
-- Get Okta Communication Settings
-- 
-- Gets Okta Communication Settings of your organization.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
getOktaCommunicationSettings
  :: OktaRequest GetOktaCommunicationSettings MimeNoContent OrgOktaCommunicationSetting MimeJSON
getOktaCommunicationSettings =
  _mkRequest "GET" ["/api/v1/org/privacy/oktaCommunication"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data GetOktaCommunicationSettings  
-- | @application/json@
instance Produces GetOktaCommunicationSettings MimeJSON


-- *** getOrgContactTypes

-- | @GET \/api\/v1\/org\/contacts@
-- 
-- Get org contact types
-- 
-- Gets Contact Types of your organization.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
getOrgContactTypes
  :: OktaRequest GetOrgContactTypes MimeNoContent [OrgContactTypeObj] MimeJSON
getOrgContactTypes =
  _mkRequest "GET" ["/api/v1/org/contacts"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data GetOrgContactTypes  
-- | @application/json@
instance Produces GetOrgContactTypes MimeJSON


-- *** getOrgContactUser

-- | @GET \/api\/v1\/org\/contacts\/{contactType}@
-- 
-- Get org contact user
-- 
-- Retrieves the URL of the User associated with the specified Contact Type.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
getOrgContactUser
  :: ContactType -- ^ "contactType"
  -> OktaRequest GetOrgContactUser MimeNoContent OrgContactUser MimeJSON
getOrgContactUser (ContactType contactType) =
  _mkRequest "GET" ["/api/v1/org/contacts/",toPath contactType]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data GetOrgContactUser  
-- | @application/json@
instance Produces GetOrgContactUser MimeJSON


-- *** getOrgOktaSupportSettings

-- | @GET \/api\/v1\/org\/privacy\/oktaSupport@
-- 
-- Get Okta Support settings
-- 
-- Gets Okta Support Settings of your organization.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
getOrgOktaSupportSettings
  :: OktaRequest GetOrgOktaSupportSettings MimeNoContent OrgOktaSupportSettingsObj MimeJSON
getOrgOktaSupportSettings =
  _mkRequest "GET" ["/api/v1/org/privacy/oktaSupport"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data GetOrgOktaSupportSettings  
-- | @application/json@
instance Produces GetOrgOktaSupportSettings MimeJSON


-- *** getOrgPreferences

-- | @GET \/api\/v1\/org\/preferences@
-- 
-- Get org preferences
-- 
-- Gets preferences of your organization.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
getOrgPreferences
  :: OktaRequest GetOrgPreferences MimeNoContent OrgPreferences MimeJSON
getOrgPreferences =
  _mkRequest "GET" ["/api/v1/org/preferences"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data GetOrgPreferences  
-- | @application/json@
instance Produces GetOrgPreferences MimeJSON


-- *** getOrgSettings

-- | @GET \/api\/v1\/org@
-- 
-- Get org settings
-- 
-- Get settings of your organization.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
getOrgSettings
  :: OktaRequest GetOrgSettings MimeNoContent OrgSetting MimeJSON
getOrgSettings =
  _mkRequest "GET" ["/api/v1/org"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data GetOrgSettings  
-- | @application/json@
instance Produces GetOrgSettings MimeJSON


-- *** grantOktaSupport

-- | @POST \/api\/v1\/org\/privacy\/oktaSupport\/grant@
-- 
-- Grant Okta Support
-- 
-- Enables you to temporarily allow Okta Support to access your org as an administrator for eight hours.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
grantOktaSupport
  :: OktaRequest GrantOktaSupport MimeNoContent OrgOktaSupportSettingsObj MimeJSON
grantOktaSupport =
  _mkRequest "POST" ["/api/v1/org/privacy/oktaSupport/grant"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data GrantOktaSupport  
-- | @application/json@
instance Produces GrantOktaSupport MimeJSON


-- *** hideOktaUIFooter

-- | @POST \/api\/v1\/org\/preferences\/hideEndUserFooter@
-- 
-- Show Okta UI Footer
-- 
-- Hide the Okta UI footer for all end users of your organization.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
hideOktaUIFooter
  :: OktaRequest HideOktaUIFooter MimeNoContent OrgPreferences MimeJSON
hideOktaUIFooter =
  _mkRequest "POST" ["/api/v1/org/preferences/hideEndUserFooter"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data HideOktaUIFooter  
-- | @application/json@
instance Produces HideOktaUIFooter MimeJSON


-- *** optInUsersToOktaCommunicationEmails

-- | @POST \/api\/v1\/org\/privacy\/oktaCommunication\/optIn@
-- 
-- Opt in all users to Okta Communication emails
-- 
-- Opts in all users of this org to Okta Communication emails.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
optInUsersToOktaCommunicationEmails
  :: OktaRequest OptInUsersToOktaCommunicationEmails MimeNoContent OrgOktaCommunicationSetting MimeJSON
optInUsersToOktaCommunicationEmails =
  _mkRequest "POST" ["/api/v1/org/privacy/oktaCommunication/optIn"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data OptInUsersToOktaCommunicationEmails  
-- | @application/json@
instance Produces OptInUsersToOktaCommunicationEmails MimeJSON


-- *** optOutUsersFromOktaCommunicationEmails

-- | @POST \/api\/v1\/org\/privacy\/oktaCommunication\/optOut@
-- 
-- Opt out all users from Okta Communication emails
-- 
-- Opts out all users of this org from Okta Communication emails.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
optOutUsersFromOktaCommunicationEmails
  :: OktaRequest OptOutUsersFromOktaCommunicationEmails MimeNoContent OrgOktaCommunicationSetting MimeJSON
optOutUsersFromOktaCommunicationEmails =
  _mkRequest "POST" ["/api/v1/org/privacy/oktaCommunication/optOut"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data OptOutUsersFromOktaCommunicationEmails  
-- | @application/json@
instance Produces OptOutUsersFromOktaCommunicationEmails MimeJSON


-- *** partialUpdateOrgSetting

-- | @POST \/api\/v1\/org@
-- 
-- Partial update Org setting
-- 
-- Partial update settings of your organization.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
partialUpdateOrgSetting
  :: (Consumes PartialUpdateOrgSetting MimeJSON, MimeRender MimeJSON OrgSetting)
  => OrgSetting -- ^ "orgSetting"
  -> OktaRequest PartialUpdateOrgSetting MimeJSON OrgSetting MimeJSON
partialUpdateOrgSetting orgSetting =
  _mkRequest "POST" ["/api/v1/org"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)
    `setBodyParam` orgSetting

data PartialUpdateOrgSetting 
instance HasBodyParam PartialUpdateOrgSetting OrgSetting 

-- | @application/json@
instance Consumes PartialUpdateOrgSetting MimeJSON

-- | @application/json@
instance Produces PartialUpdateOrgSetting MimeJSON


-- *** revokeOktaSupport

-- | @POST \/api\/v1\/org\/privacy\/oktaSupport\/revoke@
-- 
-- Extend Okta Support
-- 
-- Revokes Okta Support access to your organization.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
revokeOktaSupport
  :: OktaRequest RevokeOktaSupport MimeNoContent OrgOktaSupportSettingsObj MimeJSON
revokeOktaSupport =
  _mkRequest "POST" ["/api/v1/org/privacy/oktaSupport/revoke"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data RevokeOktaSupport  
-- | @application/json@
instance Produces RevokeOktaSupport MimeJSON


-- *** showOktaUIFooter

-- | @POST \/api\/v1\/org\/preferences\/showEndUserFooter@
-- 
-- Show Okta UI Footer
-- 
-- Makes the Okta UI footer visible for all end users of your organization.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
showOktaUIFooter
  :: OktaRequest ShowOktaUIFooter MimeNoContent OrgPreferences MimeJSON
showOktaUIFooter =
  _mkRequest "POST" ["/api/v1/org/preferences/showEndUserFooter"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data ShowOktaUIFooter  
-- | @application/json@
instance Produces ShowOktaUIFooter MimeJSON


-- *** updateOrgContactUser

-- | @PUT \/api\/v1\/org\/contacts\/{contactType}@
-- 
-- Update org contact user
-- 
-- Updates the User associated with the specified Contact Type.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
updateOrgContactUser
  :: (Consumes UpdateOrgContactUser MimeJSON, MimeRender MimeJSON UserIdString)
  => UserIdString -- ^ "userId"
  -> ContactType -- ^ "contactType"
  -> OktaRequest UpdateOrgContactUser MimeJSON OrgContactUser MimeJSON
updateOrgContactUser userId (ContactType contactType) =
  _mkRequest "PUT" ["/api/v1/org/contacts/",toPath contactType]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)
    `setBodyParam` userId

data UpdateOrgContactUser 
instance HasBodyParam UpdateOrgContactUser UserIdString 

-- | @application/json@
instance Consumes UpdateOrgContactUser MimeJSON

-- | @application/json@
instance Produces UpdateOrgContactUser MimeJSON


-- *** updateOrgLogo

-- | @POST \/api\/v1\/org\/logo@
-- 
-- Update org logo
-- 
-- Updates the logo for your organization.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
updateOrgLogo
  :: (Consumes UpdateOrgLogo MimeMultipartFormData)
  => File -- ^ "file"
  -> OktaRequest UpdateOrgLogo MimeMultipartFormData NoContent MimeNoContent
updateOrgLogo (File file) =
  _mkRequest "POST" ["/api/v1/org/logo"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)
    `_addMultiFormPart` NH.partFileSource "file" file

data UpdateOrgLogo  

-- | @multipart/form-data@
instance Consumes UpdateOrgLogo MimeMultipartFormData

instance Produces UpdateOrgLogo MimeNoContent


-- *** updateOrgSetting

-- | @PUT \/api\/v1\/org@
-- 
-- Update Org setting
-- 
-- Update settings of your organization.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
updateOrgSetting
  :: (Consumes UpdateOrgSetting MimeJSON, MimeRender MimeJSON OrgSetting)
  => OrgSetting -- ^ "orgSetting"
  -> OktaRequest UpdateOrgSetting MimeJSON OrgSetting MimeJSON
updateOrgSetting orgSetting =
  _mkRequest "PUT" ["/api/v1/org"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)
    `setBodyParam` orgSetting

data UpdateOrgSetting 
instance HasBodyParam UpdateOrgSetting OrgSetting 

-- | @application/json@
instance Consumes UpdateOrgSetting MimeJSON

-- | @application/json@
instance Produces UpdateOrgSetting MimeJSON

