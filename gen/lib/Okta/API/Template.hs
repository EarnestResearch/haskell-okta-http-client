{-
   Okta API

   Allows customers to easily access the Okta API

   OpenAPI Version: 3.0.1
   Okta API API version: 2.7.1
   Contact: devex-public@okta.com
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Okta.API.Template
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Okta.API.Template where

import Okta.Core
import Okta.MimeTypes
import Okta.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Template

-- *** createSmsTemplate

-- | @POST \/api\/v1\/templates\/sms@
-- 
-- Add SMS Template
-- 
-- Adds a new custom SMS template to your organization.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
createSmsTemplate 
  :: (Consumes CreateSmsTemplate MimeJSON, MimeRender MimeJSON SmsTemplate)
  => SmsTemplate -- ^ "smsTemplate"
  -> OktaRequest CreateSmsTemplate MimeJSON SmsTemplate MimeJSON
createSmsTemplate smsTemplate =
  _mkRequest "POST" ["/api/v1/templates/sms"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)
    `setBodyParam` smsTemplate

data CreateSmsTemplate 
instance HasBodyParam CreateSmsTemplate SmsTemplate 

-- | @application/json@
instance Consumes CreateSmsTemplate MimeJSON

-- | @application/json@
instance Produces CreateSmsTemplate MimeJSON


-- *** deleteSmsTemplate

-- | @DELETE \/api\/v1\/templates\/sms\/{templateId}@
-- 
-- Remove SMS Template
-- 
-- Removes an SMS template.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
deleteSmsTemplate 
  :: TemplateId -- ^ "templateId"
  -> OktaRequest DeleteSmsTemplate MimeNoContent NoContent MimeNoContent
deleteSmsTemplate (TemplateId templateId) =
  _mkRequest "DELETE" ["/api/v1/templates/sms/",toPath templateId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data DeleteSmsTemplate  
instance Produces DeleteSmsTemplate MimeNoContent


-- *** getSmsTemplate

-- | @GET \/api\/v1\/templates\/sms\/{templateId}@
-- 
-- Get SMS Template
-- 
-- Fetches a specific template by `id`
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
getSmsTemplate 
  :: TemplateId -- ^ "templateId"
  -> OktaRequest GetSmsTemplate MimeNoContent SmsTemplate MimeJSON
getSmsTemplate (TemplateId templateId) =
  _mkRequest "GET" ["/api/v1/templates/sms/",toPath templateId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data GetSmsTemplate  
-- | @application/json@
instance Produces GetSmsTemplate MimeJSON


-- *** listSmsTemplates

-- | @GET \/api\/v1\/templates\/sms@
-- 
-- List SMS Templates
-- 
-- Enumerates custom SMS templates in your organization. A subset of templates can be returned that match a template type.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
listSmsTemplates 
  :: OktaRequest ListSmsTemplates MimeNoContent [SmsTemplate] MimeJSON
listSmsTemplates =
  _mkRequest "GET" ["/api/v1/templates/sms"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data ListSmsTemplates  
instance HasOptionalParam ListSmsTemplates TemplateType where
  applyOptionalParam req (TemplateType xs) =
    req `addQuery` toQuery ("templateType", Just xs)
-- | @application/json@
instance Produces ListSmsTemplates MimeJSON


-- *** partialUpdateSmsTemplate

-- | @POST \/api\/v1\/templates\/sms\/{templateId}@
-- 
-- Partial SMS Template Update
-- 
-- Updates only some of the SMS template properties:
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
partialUpdateSmsTemplate 
  :: (Consumes PartialUpdateSmsTemplate MimeJSON, MimeRender MimeJSON SmsTemplate)
  => SmsTemplate -- ^ "smsTemplate"
  -> TemplateId -- ^ "templateId"
  -> OktaRequest PartialUpdateSmsTemplate MimeJSON SmsTemplate MimeJSON
partialUpdateSmsTemplate smsTemplate (TemplateId templateId) =
  _mkRequest "POST" ["/api/v1/templates/sms/",toPath templateId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)
    `setBodyParam` smsTemplate

data PartialUpdateSmsTemplate 
instance HasBodyParam PartialUpdateSmsTemplate SmsTemplate 

-- | @application/json@
instance Consumes PartialUpdateSmsTemplate MimeJSON

-- | @application/json@
instance Produces PartialUpdateSmsTemplate MimeJSON


-- *** updateSmsTemplate

-- | @PUT \/api\/v1\/templates\/sms\/{templateId}@
-- 
-- Update SMS Template
-- 
-- Updates the SMS template.
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
updateSmsTemplate 
  :: (Consumes UpdateSmsTemplate MimeJSON, MimeRender MimeJSON SmsTemplate)
  => SmsTemplate -- ^ "smsTemplate"
  -> TemplateId -- ^ "templateId"
  -> OktaRequest UpdateSmsTemplate MimeJSON SmsTemplate MimeJSON
updateSmsTemplate smsTemplate (TemplateId templateId) =
  _mkRequest "PUT" ["/api/v1/templates/sms/",toPath templateId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)
    `setBodyParam` smsTemplate

data UpdateSmsTemplate 
instance HasBodyParam UpdateSmsTemplate SmsTemplate 

-- | @application/json@
instance Consumes UpdateSmsTemplate MimeJSON

-- | @application/json@
instance Produces UpdateSmsTemplate MimeJSON

