{-
   Okta API

   Allows customers to easily access the Okta API

   OpenAPI Version: 3.0.1
   Okta API API version: 2.7.1
   Contact: devex-public@okta.com
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Okta.API.TrustedOrigin
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Okta.API.TrustedOrigin where

import Okta.Core
import Okta.MimeTypes
import Okta.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** TrustedOrigin

-- *** activateOrigin

-- | @POST \/api\/v1\/trustedOrigins\/{trustedOriginId}\/lifecycle\/activate@
-- 
-- Success
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
activateOrigin 
  :: TrustedOriginId -- ^ "trustedOriginId"
  -> OktaRequest ActivateOrigin MimeNoContent TrustedOrigin MimeJSON
activateOrigin (TrustedOriginId trustedOriginId) =
  _mkRequest "POST" ["/api/v1/trustedOrigins/",toPath trustedOriginId,"/lifecycle/activate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data ActivateOrigin  
-- | @application/json@
instance Produces ActivateOrigin MimeJSON


-- *** createOrigin

-- | @POST \/api\/v1\/trustedOrigins@
-- 
-- Success
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
createOrigin 
  :: (Consumes CreateOrigin MimeJSON, MimeRender MimeJSON TrustedOrigin)
  => TrustedOrigin -- ^ "trustedOrigin"
  -> OktaRequest CreateOrigin MimeJSON TrustedOrigin MimeJSON
createOrigin trustedOrigin =
  _mkRequest "POST" ["/api/v1/trustedOrigins"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)
    `setBodyParam` trustedOrigin

data CreateOrigin 
instance HasBodyParam CreateOrigin TrustedOrigin 

-- | @application/json@
instance Consumes CreateOrigin MimeJSON

-- | @application/json@
instance Produces CreateOrigin MimeJSON


-- *** deactivateOrigin

-- | @POST \/api\/v1\/trustedOrigins\/{trustedOriginId}\/lifecycle\/deactivate@
-- 
-- Success
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
deactivateOrigin 
  :: TrustedOriginId -- ^ "trustedOriginId"
  -> OktaRequest DeactivateOrigin MimeNoContent TrustedOrigin MimeJSON
deactivateOrigin (TrustedOriginId trustedOriginId) =
  _mkRequest "POST" ["/api/v1/trustedOrigins/",toPath trustedOriginId,"/lifecycle/deactivate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data DeactivateOrigin  
-- | @application/json@
instance Produces DeactivateOrigin MimeJSON


-- *** deleteOrigin

-- | @DELETE \/api\/v1\/trustedOrigins\/{trustedOriginId}@
-- 
-- Success
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
deleteOrigin 
  :: TrustedOriginId -- ^ "trustedOriginId"
  -> OktaRequest DeleteOrigin MimeNoContent NoContent MimeNoContent
deleteOrigin (TrustedOriginId trustedOriginId) =
  _mkRequest "DELETE" ["/api/v1/trustedOrigins/",toPath trustedOriginId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data DeleteOrigin  
instance Produces DeleteOrigin MimeNoContent


-- *** getOrigin

-- | @GET \/api\/v1\/trustedOrigins\/{trustedOriginId}@
-- 
-- Success
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
getOrigin 
  :: TrustedOriginId -- ^ "trustedOriginId"
  -> OktaRequest GetOrigin MimeNoContent TrustedOrigin MimeJSON
getOrigin (TrustedOriginId trustedOriginId) =
  _mkRequest "GET" ["/api/v1/trustedOrigins/",toPath trustedOriginId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data GetOrigin  
-- | @application/json@
instance Produces GetOrigin MimeJSON


-- *** listOrigins

-- | @GET \/api\/v1\/trustedOrigins@
-- 
-- Success
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
listOrigins 
  :: OktaRequest ListOrigins MimeNoContent [TrustedOrigin] MimeJSON
listOrigins =
  _mkRequest "GET" ["/api/v1/trustedOrigins"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data ListOrigins  
instance HasOptionalParam ListOrigins Q where
  applyOptionalParam req (Q xs) =
    req `addQuery` toQuery ("q", Just xs)
instance HasOptionalParam ListOrigins Filter where
  applyOptionalParam req (Filter xs) =
    req `addQuery` toQuery ("filter", Just xs)
instance HasOptionalParam ListOrigins After where
  applyOptionalParam req (After xs) =
    req `addQuery` toQuery ("after", Just xs)
instance HasOptionalParam ListOrigins Limit where
  applyOptionalParam req (Limit xs) =
    req `addQuery` toQuery ("limit", Just xs)
-- | @application/json@
instance Produces ListOrigins MimeJSON


-- *** updateOrigin

-- | @PUT \/api\/v1\/trustedOrigins\/{trustedOriginId}@
-- 
-- Success
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
updateOrigin 
  :: (Consumes UpdateOrigin MimeJSON, MimeRender MimeJSON TrustedOrigin)
  => TrustedOrigin -- ^ "trustedOrigin"
  -> TrustedOriginId -- ^ "trustedOriginId"
  -> OktaRequest UpdateOrigin MimeJSON TrustedOrigin MimeJSON
updateOrigin trustedOrigin (TrustedOriginId trustedOriginId) =
  _mkRequest "PUT" ["/api/v1/trustedOrigins/",toPath trustedOriginId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)
    `setBodyParam` trustedOrigin

data UpdateOrigin 
instance HasBodyParam UpdateOrigin TrustedOrigin 

-- | @application/json@
instance Consumes UpdateOrigin MimeJSON

-- | @application/json@
instance Produces UpdateOrigin MimeJSON

