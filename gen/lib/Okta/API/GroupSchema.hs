{-
   Okta API

   Allows customers to easily access the Okta API

   OpenAPI Version: 3.0.1
   Okta API API version: 1.0.0
   Contact: devex-public@okta.com
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Okta.API.GroupSchema
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Okta.API.GroupSchema where

import Okta.Core
import Okta.MimeTypes
import Okta.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** GroupSchema

-- *** getGroupSchema

-- | @GET \/api\/v1\/meta\/schemas\/group\/default@
-- 
-- Fetches the group schema
-- 
-- Fetches the group schema
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
getGroupSchema
  :: OktaRequest GetGroupSchema MimeNoContent GroupSchema MimeJSON
getGroupSchema =
  _mkRequest "GET" ["/api/v1/meta/schemas/group/default"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data GetGroupSchema  
-- | @application/json@
instance Produces GetGroupSchema MimeJSON


-- *** updateGroupSchema

-- | @POST \/api\/v1\/meta\/schemas\/group\/default@
-- 
-- Updates, adds ore removes one or more custom Group Profile properties in the schema
-- 
-- Updates, adds ore removes one or more custom Group Profile properties in the schema
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
updateGroupSchema
  :: (Consumes UpdateGroupSchema MimeJSON)
  => OktaRequest UpdateGroupSchema MimeJSON GroupSchema MimeJSON
updateGroupSchema =
  _mkRequest "POST" ["/api/v1/meta/schemas/group/default"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data UpdateGroupSchema 
instance HasBodyParam UpdateGroupSchema GroupSchema 

-- | @application/json@
instance Consumes UpdateGroupSchema MimeJSON

-- | @application/json@
instance Produces UpdateGroupSchema MimeJSON

