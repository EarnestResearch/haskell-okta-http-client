{-
   Okta API

   Allows customers to easily access the Okta API

   OpenAPI Version: 3.0.1
   Okta API API version: 2.7.1
   Contact: devex-public@okta.com
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Okta.API.EventHook
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Okta.API.EventHook where

import Okta.Core
import Okta.MimeTypes
import Okta.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** EventHook

-- *** activateEventHook

-- | @POST \/api\/v1\/eventHooks\/{eventHookId}\/lifecycle\/activate@
-- 
-- Success
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
activateEventHook 
  :: EventHookId -- ^ "eventHookId"
  -> OktaRequest ActivateEventHook MimeNoContent EventHook MimeJSON
activateEventHook (EventHookId eventHookId) =
  _mkRequest "POST" ["/api/v1/eventHooks/",toPath eventHookId,"/lifecycle/activate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data ActivateEventHook  
-- | @application/json@
instance Produces ActivateEventHook MimeJSON


-- *** createEventHook

-- | @POST \/api\/v1\/eventHooks@
-- 
-- Success
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
createEventHook 
  :: (Consumes CreateEventHook MimeJSON, MimeRender MimeJSON EventHook)
  => EventHook -- ^ "eventHook"
  -> OktaRequest CreateEventHook MimeJSON EventHook MimeJSON
createEventHook eventHook =
  _mkRequest "POST" ["/api/v1/eventHooks"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)
    `setBodyParam` eventHook

data CreateEventHook 
instance HasBodyParam CreateEventHook EventHook 

-- | @application/json@
instance Consumes CreateEventHook MimeJSON

-- | @application/json@
instance Produces CreateEventHook MimeJSON


-- *** deactivateEventHook

-- | @POST \/api\/v1\/eventHooks\/{eventHookId}\/lifecycle\/deactivate@
-- 
-- Success
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
deactivateEventHook 
  :: EventHookId -- ^ "eventHookId"
  -> OktaRequest DeactivateEventHook MimeNoContent EventHook MimeJSON
deactivateEventHook (EventHookId eventHookId) =
  _mkRequest "POST" ["/api/v1/eventHooks/",toPath eventHookId,"/lifecycle/deactivate"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data DeactivateEventHook  
-- | @application/json@
instance Produces DeactivateEventHook MimeJSON


-- *** deleteEventHook

-- | @DELETE \/api\/v1\/eventHooks\/{eventHookId}@
-- 
-- Success
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
deleteEventHook 
  :: EventHookId -- ^ "eventHookId"
  -> OktaRequest DeleteEventHook MimeNoContent NoContent MimeNoContent
deleteEventHook (EventHookId eventHookId) =
  _mkRequest "DELETE" ["/api/v1/eventHooks/",toPath eventHookId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data DeleteEventHook  
instance Produces DeleteEventHook MimeNoContent


-- *** getEventHook

-- | @GET \/api\/v1\/eventHooks\/{eventHookId}@
-- 
-- Success
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
getEventHook 
  :: EventHookId -- ^ "eventHookId"
  -> OktaRequest GetEventHook MimeNoContent EventHook MimeJSON
getEventHook (EventHookId eventHookId) =
  _mkRequest "GET" ["/api/v1/eventHooks/",toPath eventHookId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data GetEventHook  
-- | @application/json@
instance Produces GetEventHook MimeJSON


-- *** listEventHooks

-- | @GET \/api\/v1\/eventHooks@
-- 
-- Success
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
listEventHooks 
  :: OktaRequest ListEventHooks MimeNoContent [EventHook] MimeJSON
listEventHooks =
  _mkRequest "GET" ["/api/v1/eventHooks"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data ListEventHooks  
-- | @application/json@
instance Produces ListEventHooks MimeJSON


-- *** updateEventHook

-- | @PUT \/api\/v1\/eventHooks\/{eventHookId}@
-- 
-- Success
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
updateEventHook 
  :: (Consumes UpdateEventHook MimeJSON, MimeRender MimeJSON EventHook)
  => EventHook -- ^ "eventHook"
  -> EventHookId -- ^ "eventHookId"
  -> OktaRequest UpdateEventHook MimeJSON EventHook MimeJSON
updateEventHook eventHook (EventHookId eventHookId) =
  _mkRequest "PUT" ["/api/v1/eventHooks/",toPath eventHookId]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)
    `setBodyParam` eventHook

data UpdateEventHook 
instance HasBodyParam UpdateEventHook EventHook 

-- | @application/json@
instance Consumes UpdateEventHook MimeJSON

-- | @application/json@
instance Produces UpdateEventHook MimeJSON


-- *** verifyEventHook

-- | @POST \/api\/v1\/eventHooks\/{eventHookId}\/lifecycle\/verify@
-- 
-- Success
-- 
-- AuthMethod: 'AuthApiKeyApiToken'
-- 
verifyEventHook 
  :: EventHookId -- ^ "eventHookId"
  -> OktaRequest VerifyEventHook MimeNoContent EventHook MimeJSON
verifyEventHook (EventHookId eventHookId) =
  _mkRequest "POST" ["/api/v1/eventHooks/",toPath eventHookId,"/lifecycle/verify"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthApiKeyApiToken)

data VerifyEventHook  
-- | @application/json@
instance Produces VerifyEventHook MimeJSON

