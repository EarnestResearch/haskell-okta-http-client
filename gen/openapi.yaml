openapi: 3.0.1
info:
  contact:
    email: devex-public@okta.com
    name: Okta Developer Team
    url: http://developer.okta.com/
  description: Allows customers to easily access the Okta API
  license:
    name: Apache-2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://developer.okta.com/terms/
  title: Okta API
  version: 1.3.0
externalDocs:
  description: Find more info here
  url: http://developer.okta.com/docs/api/getting_started/design_principles.html
servers:
- url: https://your-subdomain.okta.com/
paths:
  /api/v1/apps:
    get:
      description: Enumerates apps added to your organization with pagination. A subset
        of apps can be returned that match a supported filter expression or query.
      operationId: listApplications
      parameters:
      - in: query
        name: q
        schema:
          type: string
      - description: Specifies the pagination cursor for the next page of apps
        in: query
        name: after
        schema:
          type: string
      - description: Specifies the number of results for a page
        in: query
        name: limit
        schema:
          default: -1
          format: int32
          type: integer
      - description: Filters apps by status, user.id, group.id or credentials.signing.kid
          expression
        in: query
        name: filter
        schema:
          type: string
      - description: Traverses users link relationship and optionally embeds Application
          User resource
        in: query
        name: expand
        schema:
          type: string
      - in: query
        name: includeNonDeleted
        schema:
          default: false
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: Success
      security:
      - api_token: []
      summary: List Applications
      tags:
      - Application
    post:
      description: Adds a new application to your Okta organization.
      operationId: createApplication
      parameters:
      - description: Executes activation lifecycle operation when creating the app
        in: query
        name: activate
        schema:
          default: true
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Success
      security:
      - api_token: []
      summary: Add Application
      tags:
      - Application
      x-codegen-request-body-name: application
  /api/v1/apps/{appId}:
    delete:
      description: Removes an inactive application.
      operationId: deleteApplication
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Delete Application
      tags:
      - Application
    get:
      description: Fetches an application from your Okta organization by `id`.
      operationId: getApplication
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      - in: query
        name: expand
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Success
      security:
      - api_token: []
      summary: Get Application
      tags:
      - Application
    put:
      description: Updates an application in your organization.
      operationId: updateApplication
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Success
      security:
      - api_token: []
      summary: Update Application
      tags:
      - Application
      x-codegen-request-body-name: application
  /api/v1/apps/{appId}/credentials/keys:
    get:
      description: Enumerates key credentials for an application
      operationId: listApplicationKeys
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JsonWebKey'
                type: array
          description: Success
      security:
      - api_token: []
      summary: List Key Credentials for Application
      tags:
      - Application
  /api/v1/apps/{appId}/credentials/keys/{keyId}:
    get:
      description: Gets a specific [application key credential](#application-key-credential-model)
        by `kid`
      operationId: getApplicationKey
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      - in: path
        name: keyId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
      security:
      - api_token: []
      summary: Get Key Credential for Application
      tags:
      - Application
  /api/v1/apps/{appId}/credentials/keys/{keyId}/clone:
    post:
      description: Clones a X.509 certificate for an application key credential from
        a source application to target application.
      operationId: cloneApplicationKey
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      - in: path
        name: keyId
        required: true
        schema:
          type: string
      - description: Unique key of the target Application
        in: query
        name: targetAid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
      security:
      - api_token: []
      summary: Clone Application Key Credential
      tags:
      - Application
  /api/v1/apps/{appId}/groups:
    get:
      description: Enumerates group assignments for an application.
      operationId: listApplicationGroupAssignments
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      - in: query
        name: q
        schema:
          type: string
      - description: Specifies the pagination cursor for the next page of assignments
        in: query
        name: after
        schema:
          type: string
      - description: Specifies the number of results for a page
        in: query
        name: limit
        schema:
          default: -1
          format: int32
          type: integer
      - in: query
        name: expand
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApplicationGroupAssignment'
                type: array
          description: Success
      security:
      - api_token: []
      summary: List Groups Assigned to Application
      tags:
      - Application
  /api/v1/apps/{appId}/groups/{groupId}:
    delete:
      description: Removes a group assignment from an application.
      operationId: deleteApplicationGroupAssignment
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Remove Group from Application
      tags:
      - Application
    get:
      description: Fetches an application group assignment
      operationId: getApplicationGroupAssignment
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: query
        name: expand
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupAssignment'
          description: Success
      security:
      - api_token: []
      summary: Get Assigned Group for Application
      tags:
      - Application
    put:
      description: Assigns a group to an application
      operationId: createApplicationGroupAssignment
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationGroupAssignment'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGroupAssignment'
          description: Success
      security:
      - api_token: []
      summary: Assign Group to Application
      tags:
      - Application
      x-codegen-request-body-name: applicationGroupAssignment
  /api/v1/apps/{appId}/lifecycle/activate:
    post:
      description: Activates an inactive application.
      operationId: activateApplication
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Activate Application
      tags:
      - Application
  /api/v1/apps/{appId}/lifecycle/deactivate:
    post:
      description: Deactivates an active application.
      operationId: deactivateApplication
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Deactivate Application
      tags:
      - Application
  /api/v1/apps/{appId}/users:
    get:
      description: Enumerates all assigned [application users](#application-user-model)
        for an application.
      operationId: listApplicationUsers
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      - in: query
        name: q
        schema:
          type: string
      - in: query
        name: query_scope
        schema:
          type: string
      - description: specifies the pagination cursor for the next page of assignments
        in: query
        name: after
        schema:
          type: string
      - description: specifies the number of results for a page
        in: query
        name: limit
        schema:
          default: -1
          format: int32
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      - in: query
        name: expand
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppUser'
                type: array
          description: Success
      security:
      - api_token: []
      summary: List Users Assigned to Application
      tags:
      - Application
    post:
      description: Assigns an user to an application with [credentials](#application-user-credentials-object)
        and an app-specific [profile](#application-user-profile-object). Profile mappings
        defined for the application are first applied before applying any profile
        properties specified in the request.
      operationId: assignUserToApplication
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
          description: Success
      security:
      - api_token: []
      summary: Assign User to Application for SSO & Provisioning
      tags:
      - Application
      x-codegen-request-body-name: appUser
  /api/v1/apps/{appId}/users/{userId}:
    delete:
      description: Removes an assignment for a user from an application.
      operationId: deleteApplicationUser
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Remove User from Application
      tags:
      - Application
    get:
      description: Fetches a specific user assignment for application by `id`.
      operationId: getApplicationUser
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: query
        name: expand
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
          description: Success
      security:
      - api_token: []
      summary: Get Assigned User for Application
      tags:
      - Application
    post:
      description: Updates a user's profile for an application
      operationId: updateApplicationUser
      parameters:
      - in: path
        name: appId
        required: true
        schema:
          type: string
      - in: path
        name: userId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
          description: Success
      security:
      - api_token: []
      summary: Update Application Profile for Assigned User
      tags:
      - Application
      x-codegen-request-body-name: appUser
  /api/v1/groups:
    get:
      description: Enumerates groups in your organization with pagination. A subset
        of groups can be returned that match a supported filter expression or query.
      operationId: listGroups
      parameters:
      - description: Searches the name property of groups for matching value
        in: query
        name: q
        schema:
          type: string
      - description: Filter expression for groups
        in: query
        name: filter
        schema:
          type: string
      - description: Specifies the pagination cursor for the next page of groups
        in: query
        name: after
        schema:
          type: string
      - description: Specifies the number of group results in a page
        in: query
        name: limit
        schema:
          default: -1
          format: int32
          type: integer
      - in: query
        name: expand
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Success
      security:
      - api_token: []
      summary: List Groups
      tags:
      - Group
    post:
      description: Adds a new group with `OKTA_GROUP` type to your organization.
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Success
      security:
      - api_token: []
      summary: Add Group
      tags:
      - Group
      x-codegen-request-body-name: group
  /api/v1/groups/rules:
    get:
      description: Lists all group rules for your organization.
      operationId: listRules
      parameters:
      - description: Specifies the number of rule results in a page
        in: query
        name: limit
        schema:
          default: -1
          format: int32
          type: integer
      - description: Specifies the pagination cursor for the next page of rules
        in: query
        name: after
        schema:
          type: string
      - in: query
        name: expand
        schema:
          type: string
          x-okta-added-version: 1.3.0
        x-okta-added-version: 1.3.0
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupRule'
                type: array
          description: Success
      security:
      - api_token: []
      summary: List Group Rules
      tags:
      - Group
    post:
      description: Creates a group rule to dynamically add users to the specified
        group if they match the condition
      operationId: createRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRule'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
          description: Success
      security:
      - api_token: []
      summary: Create Group Rule
      tags:
      - Group
      x-codegen-request-body-name: groupRule
  /api/v1/groups/rules/{ruleId}:
    delete:
      description: Removes a specific group rule by id from your organization
      operationId: deleteRule
      parameters:
      - in: path
        name: ruleId
        required: true
        schema:
          type: string
      - in: query
        name: removeUsers
        schema:
          default: false
          type: boolean
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Delete a group Rule
      tags:
      - Group
    get:
      description: Fetches a specific group rule by id from your organization
      operationId: getRule
      parameters:
      - in: path
        name: ruleId
        required: true
        schema:
          type: string
      - in: query
        name: expand
        schema:
          type: string
          x-okta-added-version: 1.3.0
        x-okta-added-version: 1.3.0
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
          description: Success
      security:
      - api_token: []
      summary: Get Group Rule
      tags:
      - Group
    put:
      operationId: updateRule
      parameters:
      - in: path
        name: ruleId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRule'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
          description: Success
      security:
      - api_token: []
      tags:
      - Group
      x-codegen-request-body-name: groupRule
  /api/v1/groups/rules/{ruleId}/lifecycle/activate:
    post:
      description: Activates a specific group rule by id from your organization
      operationId: activateRule
      parameters:
      - in: path
        name: ruleId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Activate a group Rule
      tags:
      - Group
  /api/v1/groups/rules/{ruleId}/lifecycle/deactivate:
    post:
      description: Deactivates a specific group rule by id from your organization
      operationId: deactivateRule
      parameters:
      - in: path
        name: ruleId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Deactivate a group Rule
      tags:
      - Group
  /api/v1/groups/{groupId}:
    delete:
      description: Removes a group with `OKTA_GROUP` type from your organization.
      operationId: deleteGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Remove Group
      tags:
      - Group
    get:
      description: Lists all group rules for your organization.
      operationId: getGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: query
        name: expand
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Success
      security:
      - api_token: []
      summary: List Group Rules
      tags:
      - Group
    put:
      description: Updates the profile for a group with `OKTA_GROUP` type from your
        organization.
      operationId: updateGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Success
      security:
      - api_token: []
      summary: Update Group
      tags:
      - Group
      x-codegen-request-body-name: group
  /api/v1/groups/{groupId}/users:
    get:
      description: Enumerates all [users](/docs/api/resources/users.html#user-model)
        that are a member of a group.
      operationId: listGroupUsers
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - description: Specifies the pagination cursor for the next page of users
        in: query
        name: after
        schema:
          type: string
      - description: Specifies the number of user results in a page
        in: query
        name: limit
        schema:
          default: -1
          format: int32
          type: integer
      - in: query
        name: managedBy
        schema:
          default: all
          type: string
          x-okta-added-version: 1.3.0
        x-okta-added-version: 1.3.0
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Success
      security:
      - api_token: []
      summary: List Group Members
      tags:
      - Group
  /api/v1/groups/{groupId}/users/{userId}:
    delete:
      description: Removes a [user](users.html#user-model) from a group with `OKTA_GROUP`
        type.
      operationId: removeGroupUser
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Remove User from Group
      tags:
      - Group
    put:
      description: Adds a [user](users.html#user-model) to a group with `OKTA_GROUP`
        type.
      operationId: addUserToGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Add User to Group
      tags:
      - Group
  /api/v1/logs:
    get:
      description: The Okta System Log API provides read access to your organization’s
        system log. This API provides more functionality than the Events API
      operationId: getLogs
      parameters:
      - in: query
        name: until
        schema:
          type: string
      - in: query
        name: since
        schema:
          type: string
      - in: query
        name: filter
        schema:
          type: string
      - in: query
        name: q
        schema:
          type: string
      - in: query
        name: limit
        schema:
          default: 100
          type: integer
      - in: query
        name: sortOrder
        schema:
          default: ASCENDING
          type: string
      - in: query
        name: after
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LogEvent'
                type: array
          description: Success
      security:
      - api_token: []
      summary: Fetch a list of events from your Okta organization system log.
      tags:
      - Application
  /api/v1/sessions:
    post:
      description: Creates a new session for a user with a valid session token. Use
        this API if, for example, you want to set the session cookie yourself instead
        of allowing Okta to set it, or want to hold the session ID in order to delete
        a session via the API instead of visiting the logout URL.
      operationId: createSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Success
      security:
      - api_token: []
      summary: Create Session with Session Token
      tags:
      - Session
      x-codegen-request-body-name: createSessionRequest
  /api/v1/sessions/{sessionId}:
    delete:
      operationId: endSession
      parameters:
      - in: path
        name: sessionId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Close Session
      tags:
      - Session
    get:
      description: Get details about a session.
      operationId: getSession
      parameters:
      - in: path
        name: sessionId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Success
      security:
      - api_token: []
      tags:
      - Session
  /api/v1/sessions/{sessionId}/lifecycle/refresh:
    post:
      operationId: refreshSession
      parameters:
      - in: path
        name: sessionId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: Success
      security:
      - api_token: []
      summary: Refresh Session
      tags:
      - Session
  /api/v1/users:
    get:
      description: Lists users in your organization with pagination in most cases.  A
        subset of users can be returned that match a supported filter expression or
        search criteria.
      operationId: listUsers
      parameters:
      - description: Finds a user that matches firstName, lastName, and email properties
        in: query
        name: q
        schema:
          type: string
      - description: Specifies the pagination cursor for the next page of users
        in: query
        name: after
        schema:
          type: string
      - description: Specifies the number of results returned
        in: query
        name: limit
        schema:
          default: -1
          format: int32
          type: integer
      - description: Filters users with a supported expression for a subset of properties
        in: query
        name: filter
        schema:
          type: string
      - in: query
        name: format
        schema:
          type: string
      - description: Searches for users with a supported filtering  expression for
          most properties
        in: query
        name: search
        schema:
          type: string
      - in: query
        name: expand
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Success
      security:
      - api_token: []
      summary: List Users
      tags:
      - User
    post:
      description: Creates a new user in your Okta organization with or without credentials.
      operationId: createUser
      parameters:
      - description: Executes activation lifecycle operation when creating the user
        in: query
        name: activate
        schema:
          default: true
          type: boolean
      - description: Indicates whether to create a user with a specified authentication
          provider
        in: query
        name: provider
        schema:
          default: false
          type: boolean
      - description: With activate=true, set nextLogin to "changePassword" to have
          the password be EXPIRED, so user must change it the next time they log in.
        in: query
        name: nextLogin
        schema:
          default: "false"
          type: string
          x-okta-added-version: 0.14.0
          x-openapi-v3-schema-ref: '#/definitions/UserNextLogin'
        x-okta-added-version: 0.14.0
        x-openapi-v3-schema-ref: '#/definitions/UserNextLogin'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
      security:
      - api_token: []
      summary: Create User
      tags:
      - User
      x-codegen-request-body-name: body
  /api/v1/users/{userId}:
    delete:
      description: Deletes a user permanently.  This operation can only be performed
        on users that have a `DEPROVISIONED` status.  **This action cannot be recovered!**
      operationId: deactivateOrDeleteUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Delete User
      tags:
      - User
    get:
      description: Fetches a user from your Okta organization.
      operationId: getUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
      security:
      - api_token: []
      summary: Get User
      tags:
      - User
    put:
      description: Update a user's profile and/or credentials using strict-update
        semantics.
      operationId: updateUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Success
      security:
      - api_token: []
      summary: Update User
      tags:
      - User
      x-codegen-request-body-name: user
  /api/v1/users/{userId}/appLinks:
    get:
      description: Fetches appLinks for all direct or indirect (via group membership)
        assigned applications.
      operationId: listAppLinks
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: query
        name: showAll
        schema:
          default: false
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppLink'
                type: array
          description: Success
      security:
      - api_token: []
      summary: Get Assigned App Links
      tags:
      - User
  /api/v1/users/{userId}/credentials/change_password:
    post:
      description: Changes a user's password by validating the user's current password.  This
        operation can only be performed on users in `STAGED`, `ACTIVE`, `PASSWORD_EXPIRED`,
        or `RECOVERY` status that have a valid [password credential](#password-object)
      operationId: changePassword
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
          description: Success
      security:
      - api_token: []
      summary: Change Password
      tags:
      - User
      x-codegen-request-body-name: changePasswordRequest
  /api/v1/users/{userId}/credentials/change_recovery_question:
    post:
      description: Changes a user's recovery question & answer credential by validating
        the user's current password.  This operation can only be performed on users
        in **STAGED**, **ACTIVE** or **RECOVERY** `status` that have a valid [password
        credential](#password-object)
      operationId: changeRecoveryQuestion
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
          description: Success
      security:
      - api_token: []
      summary: Change Recovery Question
      tags:
      - User
      x-codegen-request-body-name: userCredentials
  /api/v1/users/{userId}/credentials/forgot_password:
    post:
      description: Generates a one-time token (OTT) that can be used to reset a user's
        password.  The user will be required to validate their security question's
        answer when visiting the reset link.  This operation can only be performed
        on users with a valid [recovery question credential](#recovery-question-object)
        and have an `ACTIVE` status.
      operationId: forgotPassword
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: query
        name: sendEmail
        schema:
          default: true
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResponse'
          description: Success
      security:
      - api_token: []
      summary: Forgot Password
      tags:
      - User
      x-codegen-request-body-name: userCredentials
  /api/v1/users/{userId}/factors:
    get:
      description: Enumerates all the enrolled factors for the specified user
      operationId: listFactors
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Factor'
                type: array
          description: Success
      security:
      - api_token: []
      tags:
      - UserFactor
    post:
      description: Enrolls a user with a supported [factor](#list-factors-to-enroll)
      operationId: addFactor
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: query
        name: updatePhone
        schema:
          default: false
          type: boolean
      - description: id of SMS template (only for SMS factor)
        in: query
        name: templateId
        schema:
          type: string
      - in: query
        name: tokenLifetimeSeconds
        schema:
          default: 300
          format: int32
          type: integer
          x-okta-added-version: 1.3.0
        x-okta-added-version: 1.3.0
      - in: query
        name: activate
        schema:
          default: false
          type: boolean
          x-okta-added-version: 1.3.0
        x-okta-added-version: 1.3.0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Factor'
        description: Factor
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Factor'
          description: Success
      security:
      - api_token: []
      summary: Enroll Factor
      tags:
      - UserFactor
      x-codegen-request-body-name: body
  /api/v1/users/{userId}/factors/catalog:
    get:
      description: Enumerates all the [supported factors](#supported-factors-for-providers)
        that can be enrolled for the specified user
      operationId: listSupportedFactors
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Factor'
                type: array
          description: Success
      security:
      - api_token: []
      tags:
      - UserFactor
  /api/v1/users/{userId}/factors/questions:
    get:
      description: Enumerates all available security questions for a user's `question`
        factor
      operationId: listSupportedSecurityQuestions
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SecurityQuestion'
                type: array
          description: Success
      security:
      - api_token: []
      tags:
      - UserFactor
  /api/v1/users/{userId}/factors/{factorId}:
    delete:
      description: Unenrolls an existing factor for the specified user, allowing the
        user to enroll a new factor.
      operationId: deleteFactor
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: path
        name: factorId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      tags:
      - UserFactor
    get:
      description: Fetches a factor for the specified user
      operationId: getFactor
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: path
        name: factorId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Factor'
          description: Success
      security:
      - api_token: []
      tags:
      - UserFactor
  /api/v1/users/{userId}/factors/{factorId}/lifecycle/activate:
    post:
      description: The `sms` and `token:software:totp` [factor types](#factor-type)
        require activation to complete the enrollment process.
      operationId: activateFactor
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: path
        name: factorId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyFactorRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Factor'
          description: Success
      security:
      - api_token: []
      summary: Activate Factor
      tags:
      - UserFactor
      x-codegen-request-body-name: body
  /api/v1/users/{userId}/factors/{factorId}/verify:
    post:
      description: Verifies an OTP for a `token` or `token:hardware` factor
      operationId: verifyFactor
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: path
        name: factorId
        required: true
        schema:
          type: string
      - in: query
        name: templateId
        schema:
          type: string
      - in: query
        name: tokenLifetimeSeconds
        schema:
          default: 300
          format: int32
          type: integer
          x-okta-added-version: 1.3.0
        x-okta-added-version: 1.3.0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyFactorRequest'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyFactorResponse'
          description: Success
      security:
      - api_token: []
      summary: Verify MFA Factor
      tags:
      - UserFactor
      x-codegen-request-body-name: body
  /api/v1/users/{userId}/groups:
    get:
      description: Fetches the groups of which the user is a member.
      operationId: listUserGroups
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: query
        name: after
        schema:
          type: string
      - in: query
        name: limit
        schema:
          default: -1
          format: int32
          type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Success
      security:
      - api_token: []
      summary: Get Member Groups
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/activate:
    post:
      description: Activates a user.  This operation can only be performed on users
        with a `STAGED` status.  Activation of a user is an asynchronous operation.  The
        user will have the `transitioningToStatus` property with a value of `ACTIVE`
        during activation to indicate that the user hasn't completed the asynchronous
        operation.  The user will have a status of `ACTIVE` when the activation process
        is complete.
      operationId: activateUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - description: Sends an activation email to the user if true
        in: query
        name: sendEmail
        required: true
        schema:
          default: true
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivationToken'
          description: Success
      security:
      - api_token: []
      summary: Activate User
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/deactivate:
    post:
      description: Deactivates a user.  This operation can only be performed on users
        that do not have a `DEPROVISIONED` status.  Deactivation of a user is an asynchronous
        operation.  The user will have the `transitioningToStatus` property with a
        value of `DEPROVISIONED` during deactivation to indicate that the user hasn't
        completed the asynchronous operation.  The user will have a status of `DEPROVISIONED`
        when the deactivation process is complete.
      operationId: deactivateUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Deactivate User
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/expire_password:
    post:
      description: This operation transitions the user to the status of `PASSWORD_EXPIRED`
        so that the user is required to change their password at their next login.
      operationId: expirePassword
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - description: Sets the user's password to a temporary password,  if true
        in: query
        name: tempPassword
        schema:
          default: false
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TempPassword'
          description: Success
      security:
      - api_token: []
      summary: Expire Password
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/reset_factors:
    post:
      description: This operation resets all factors for the specified user. All MFA
        factor enrollments returned to the unenrolled state. The user's status remains
        ACTIVE. This link is present only if the user is currently enrolled in one
        or more MFA factors.
      operationId: resetAllFactors
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Reset Factors
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/reset_password:
    post:
      description: Generates a one-time token (OTT) that can be used to reset a user's
        password.  The OTT link can be automatically emailed to the user or returned
        to the API caller and distributed using a custom flow.
      operationId: resetPassword
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: query
        name: provider
        schema:
          type: string
          x-openapi-v3-schema-ref: '#/definitions/AuthenticationProviderType'
        x-openapi-v3-schema-ref: '#/definitions/AuthenticationProviderType'
      - in: query
        name: sendEmail
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordToken'
          description: Success
      security:
      - api_token: []
      summary: Reset Password
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/suspend:
    post:
      description: Suspends a user.  This operation can only be performed on users
        with an `ACTIVE` status.  The user will have a status of `SUSPENDED` when
        the process is complete.
      operationId: suspendUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Suspend User
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/unlock:
    post:
      description: Unlocks a user with a `LOCKED_OUT` status and returns them to `ACTIVE`
        status.  Users will be able to login with their current password.
      operationId: unlockUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Unlock User
      tags:
      - User
  /api/v1/users/{userId}/lifecycle/unsuspend:
    post:
      description: Unsuspends a user and returns them to the `ACTIVE` state.  This
        operation can only be performed on users that have a `SUSPENDED` status.
      operationId: unsuspendUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      summary: Unsuspend User
      tags:
      - User
  /api/v1/users/{userId}/roles:
    get:
      description: Lists all roles assigned to a user.
      operationId: listAssignedRoles
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: query
        name: expand
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Success
      security:
      - api_token: []
      tags:
      - User
    post:
      description: Assigns a role to a user.
      operationId: addRoleToUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
      security:
      - api_token: []
      tags:
      - User
      x-codegen-request-body-name: role
  /api/v1/users/{userId}/roles/{roleId}:
    delete:
      description: Unassigns a role from a user.
      operationId: removeRoleFromUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      tags:
      - User
  /api/v1/users/{userId}/roles/{roleId}/targets/groups:
    get:
      operationId: listGroupTargetsForRole
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      - in: query
        name: after
        schema:
          type: string
      - in: query
        name: limit
        schema:
          default: -1
          format: int32
          type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Success
      security:
      - api_token: []
      tags:
      - User
  /api/v1/users/{userId}/roles/{roleId}/targets/groups/{groupId}:
    delete:
      operationId: removeGroupTargetFromRole
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      tags:
      - User
    put:
      operationId: addGroupTargetToRole
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      tags:
      - User
  /api/v1/users/{userId}/sessions:
    delete:
      description: Removes all active identity provider sessions. This forces the
        user to authenticate on the next operation. Optionally revokes OpenID Connect
        and OAuth refresh and access tokens issued to the user.
      operationId: endAllUserSessions
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - description: Revoke issued OpenID Connect and OAuth refresh and access tokens
        in: query
        name: oauthTokens
        schema:
          default: false
          type: boolean
      responses:
        200:
          content: {}
          description: Success
      security:
      - api_token: []
      tags:
      - User
components:
  schemas:
    AppLink:
      example:
        appInstanceId: appInstanceId
        credentialsSetup: true
        hidden: true
        appName: appName
        appAssignmentId: appAssignmentId
        sortOrder: 0
        linkUrl: linkUrl
        id: id
        label: label
        logoUrl: logoUrl
      properties:
        appAssignmentId:
          readOnly: true
          type: string
        appInstanceId:
          readOnly: true
          type: string
        appName:
          readOnly: true
          type: string
        credentialsSetup:
          readOnly: true
          type: boolean
        hidden:
          readOnly: true
          type: boolean
        id:
          readOnly: true
          type: string
        label:
          readOnly: true
          type: string
        linkUrl:
          readOnly: true
          type: string
        logoUrl:
          readOnly: true
          type: string
        sortOrder:
          readOnly: true
          type: integer
      type: object
      x-okta-tags:
      - User
    AppUser:
      example:
        _links:
          key: '{}'
        credentials:
          password:
            value: value
          userName: userName
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          key: '{}'
        syncState: syncState
        externalId: externalId
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        passwordChanged: 2000-01-23T04:56:07.000+00:00
        lastSync: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: '{}'
        scope: scope
        statusChanged: 2000-01-23T04:56:07.000+00:00
        id: id
        status: status
      properties:
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/AppUserCredentials'
        externalId:
          readOnly: true
          type: string
        id:
          type: string
        lastSync:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        passwordChanged:
          format: date-time
          readOnly: true
          type: string
        profile:
          additionalProperties:
            properties: {}
            type: object
          type: object
        scope:
          type: string
        status:
          readOnly: true
          type: string
        statusChanged:
          format: date-time
          readOnly: true
          type: string
        syncState:
          readOnly: true
          type: string
      type: object
      x-okta-crud:
      - alias: update
        arguments:
        - dest: appId
          parentSrc: appId
        - dest: userId
          src: id
        - dest: appUser
          self: true
        operationId: updateApplicationUser
      - alias: delete
        arguments:
        - dest: appId
          parentSrc: appId
        - dest: userId
          src: id
        operationId: deleteApplicationUser
      x-okta-tags:
      - Application
    AppUserCredentials:
      example:
        password:
          value: value
        userName: userName
      properties:
        password:
          $ref: '#/components/schemas/AppUserPasswordCredential'
        userName:
          type: string
      type: object
      x-okta-tags:
      - Application
    AppUserPasswordCredential:
      example:
        value: value
      properties:
        value:
          format: password
          type: string
      type: object
      x-okta-tags:
      - Application
    Application:
      example:
        settings:
          app: '{}'
          implicitAssignment: true
          notifications:
            vpn:
              helpUrl: helpUrl
              message: message
              network:
                include:
                - include
                - include
                connection: connection
                exclude:
                - exclude
                - exclude
        visibility:
          hide:
            web: true
            iOS: true
          appLinks:
            key: true
          autoSubmitToolbar: true
        _links:
          key: '{}'
        accessibility:
          errorRedirectUrl: errorRedirectUrl
          selfService: true
          loginRedirectUrl: loginRedirectUrl
        credentials:
          userNameTemplate:
            template: template
            suffix: suffix
            type: type
          signing:
            nextRotation: 2000-01-23T04:56:07.000+00:00
            kid: kid
            rotationMode: rotationMode
            lastRotated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          key: '{}'
        label: label
        features:
        - features
        - features
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: '{}'
        name: name
        id: id
        licensing:
          seatCount: 0
        status: ACTIVE
      properties:
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        accessibility:
          $ref: '#/components/schemas/ApplicationAccessibility'
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/ApplicationCredentials'
        features:
          items:
            type: string
          type: array
        id:
          readOnly: true
          type: string
        label:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        licensing:
          $ref: '#/components/schemas/ApplicationLicensing'
        name:
          readOnly: true
          type: string
        profile:
          additionalProperties:
            properties: {}
            type: object
          type: object
        settings:
          $ref: '#/components/schemas/ApplicationSettings'
        signOnMode:
          $ref: '#/components/schemas/ApplicationSignOnMode'
        status:
          enum:
          - ACTIVE
          - INACTIVE
          - DELETED
          readOnly: true
          type: string
        visibility:
          $ref: '#/components/schemas/ApplicationVisibility'
      type: object
      x-okta-crud:
      - alias: read
        arguments:
        - dest: appId
          src: id
        operationId: getApplication
      - alias: update
        arguments:
        - dest: appId
          src: id
        - dest: application
          self: true
        operationId: updateApplication
      - alias: delete
        arguments:
        - dest: appId
          src: id
        operationId: deleteApplication
      x-okta-operations:
      - alias: activate
        arguments:
        - dest: appId
          src: id
        operationId: activateApplication
      - alias: deactivate
        arguments:
        - dest: appId
          src: id
        operationId: deactivateApplication
      - alias: listApplicationUsers
        arguments:
        - dest: appId
          src: id
        operationId: listApplicationUsers
      - alias: assignUserToApplication
        arguments:
        - dest: appId
          src: id
        operationId: assignUserToApplication
      - alias: getApplicationUser
        arguments:
        - dest: appId
          src: id
        operationId: getApplicationUser
      - alias: createApplicationGroupAssignment
        arguments:
        - dest: appId
          src: id
        operationId: createApplicationGroupAssignment
      - alias: getApplicationGroupAssignment
        arguments:
        - dest: appId
          src: id
        operationId: getApplicationGroupAssignment
      - alias: cloneApplicationKey
        arguments:
        - dest: appId
          src: id
        operationId: cloneApplicationKey
      - alias: getApplicationKey
        arguments:
        - dest: appId
          src: id
        operationId: getApplicationKey
      - alias: listGroupAssignments
        arguments:
        - dest: appId
          src: id
        operationId: listApplicationGroupAssignments
      - alias: listKeys
        arguments:
        - dest: appId
          src: id
        operationId: listApplicationKeys
      x-okta-tags:
      - Application
      x-openapi-v3-discriminator:
        mapping:
          AUTO_LOGIN: '#/definitions/AutoLoginApplication'
          BASIC_AUTH: '#/definitions/BasicAuthApplication'
          BOOKMARK: '#/definitions/BookmarkApplication'
          BROWSER_PLUGIN: '#/definitions/BrowserPluginApplication'
          OPENID_CONNECT: '#/definitions/OpenIdConnectApplication'
          SAML_2_0: '#/definitions/SamlApplication'
          SECURE_PASSWORD_STORE: '#/definitions/SecurePasswordStoreApplication'
          WS_FEDERATION: '#/definitions/WsFederationApplication'
        propertyName: signOnMode
    ApplicationAccessibility:
      example:
        errorRedirectUrl: errorRedirectUrl
        selfService: true
        loginRedirectUrl: loginRedirectUrl
      properties:
        errorRedirectUrl:
          type: string
        loginRedirectUrl:
          type: string
        selfService:
          type: boolean
      type: object
      x-okta-tags:
      - Application
    ApplicationCredentials:
      example:
        userNameTemplate:
          template: template
          suffix: suffix
          type: type
        signing:
          nextRotation: 2000-01-23T04:56:07.000+00:00
          kid: kid
          rotationMode: rotationMode
          lastRotated: 2000-01-23T04:56:07.000+00:00
      properties:
        signing:
          $ref: '#/components/schemas/ApplicationCredentialsSigning'
        userNameTemplate:
          $ref: '#/components/schemas/ApplicationCredentialsUsernameTemplate'
      type: object
      x-okta-tags:
      - Application
    ApplicationCredentialsOAuthClient:
      properties:
        autoKeyRotation:
          type: boolean
        client_id:
          type: string
        client_secret:
          type: string
        token_endpoint_auth_method:
          $ref: '#/components/schemas/OAuthEndpointAuthenticationMethod'
      type: object
      x-okta-tags:
      - Application
    ApplicationCredentialsScheme:
      enum:
      - SHARED_USERNAME_AND_PASSWORD
      - EXTERNAL_PASSWORD_SYNC
      - EDIT_USERNAME_AND_PASSWORD
      - EDIT_PASSWORD_ONLY
      - ADMIN_SETS_CREDENTIALS
      type: string
      x-okta-tags:
      - Application
    ApplicationCredentialsSigning:
      example:
        nextRotation: 2000-01-23T04:56:07.000+00:00
        kid: kid
        rotationMode: rotationMode
        lastRotated: 2000-01-23T04:56:07.000+00:00
      properties:
        kid:
          type: string
        lastRotated:
          format: date-time
          readOnly: true
          type: string
        nextRotation:
          format: date-time
          readOnly: true
          type: string
        rotationMode:
          type: string
      type: object
      x-okta-tags:
      - Application
    ApplicationCredentialsUsernameTemplate:
      example:
        template: template
        suffix: suffix
        type: type
      properties:
        suffix:
          type: string
        template:
          type: string
        type:
          type: string
      type: object
      x-okta-tags:
      - Application
    ApplicationGroupAssignment:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: '{}'
        _links:
          key: '{}'
        profile:
          key: '{}'
        id: id
        priority: 0
      properties:
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        priority:
          type: integer
        profile:
          additionalProperties:
            properties: {}
            type: object
          type: object
      type: object
      x-okta-crud:
      - alias: delete
        arguments:
        - dest: appId
          parentSrc: appId
        - dest: groupId
          src: id
        operationId: deleteApplicationGroupAssignment
      x-okta-tags:
      - Application
    ApplicationLicensing:
      example:
        seatCount: 0
      properties:
        seatCount:
          type: integer
      type: object
      x-okta-tags:
      - Application
    ApplicationSettings:
      example:
        app: '{}'
        implicitAssignment: true
        notifications:
          vpn:
            helpUrl: helpUrl
            message: message
            network:
              include:
              - include
              - include
              connection: connection
              exclude:
              - exclude
              - exclude
      properties:
        app:
          type: object
          x-okta-tags:
          - Application
        implicitAssignment:
          type: boolean
        notifications:
          $ref: '#/components/schemas/ApplicationSettingsNotifications'
      type: object
      x-okta-tags:
      - Application
    ApplicationSettingsApplication:
      type: object
      x-okta-tags:
      - Application
    ApplicationSettingsNotifications:
      example:
        vpn:
          helpUrl: helpUrl
          message: message
          network:
            include:
            - include
            - include
            connection: connection
            exclude:
            - exclude
            - exclude
      properties:
        vpn:
          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpn'
      type: object
      x-okta-tags:
      - Application
    ApplicationSettingsNotificationsVpn:
      example:
        helpUrl: helpUrl
        message: message
        network:
          include:
          - include
          - include
          connection: connection
          exclude:
          - exclude
          - exclude
      properties:
        helpUrl:
          type: string
        message:
          type: string
        network:
          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpnNetwork'
      type: object
      x-okta-tags:
      - Application
    ApplicationSettingsNotificationsVpnNetwork:
      example:
        include:
        - include
        - include
        connection: connection
        exclude:
        - exclude
        - exclude
      properties:
        connection:
          type: string
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Application
    ApplicationSignOnMode:
      enum:
      - BOOKMARK
      - BASIC_AUTH
      - BROWSER_PLUGIN
      - SECURE_PASSWORD_STORE
      - AUTO_LOGIN
      - WS_FEDERATION
      - SAML_2_0
      - OPENID_CONNECT
      type: string
      x-okta-tags:
      - Application
    ApplicationVisibility:
      example:
        hide:
          web: true
          iOS: true
        appLinks:
          key: true
        autoSubmitToolbar: true
      properties:
        appLinks:
          additionalProperties:
            type: boolean
          type: object
        autoSubmitToolbar:
          type: boolean
        hide:
          $ref: '#/components/schemas/ApplicationVisibilityHide'
      type: object
      x-okta-tags:
      - Application
    ApplicationVisibilityHide:
      example:
        web: true
        iOS: true
      properties:
        iOS:
          type: boolean
        web:
          type: boolean
      type: object
      x-okta-tags:
      - Application
    AuthenticationProvider:
      example:
        name: name
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/AuthenticationProviderType'
      type: object
      x-okta-tags:
      - User
    AuthenticationProviderType:
      enum:
      - ACTIVE_DIRECTORY
      - FEDERATION
      - LDAP
      - OKTA
      - SOCIAL
      - IMPORT
      type: string
      x-okta-tags:
      - User
    AutoLoginApplication:
      properties:
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
        settings:
          $ref: '#/components/schemas/AutoLoginApplicationSettings'
      type: object
      x-okta-parent: '#/definitions/Application'
      x-okta-tags:
      - Application
    AutoLoginApplicationSettings:
      properties:
        signOn:
          $ref: '#/components/schemas/AutoLoginApplicationSettingsSignOn'
      type: object
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    AutoLoginApplicationSettingsSignOn:
      properties:
        loginUrl:
          type: string
        redirectUrl:
          type: string
      type: object
      x-okta-tags:
      - Application
    BasicApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/BasicApplicationSettingsApplication'
      type: object
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    BasicApplicationSettingsApplication:
      properties:
        authURL:
          type: string
        url:
          type: string
      type: object
      x-okta-parent: '#/definitions/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    BasicAuthApplication:
      properties:
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
        name:
          type: object
        settings:
          $ref: '#/components/schemas/BasicApplicationSettings'
      type: object
      x-okta-defined-as:
        name: template_basic_auth
      x-okta-parent: '#/definitions/Application'
      x-okta-tags:
      - Application
    BookmarkApplication:
      properties:
        name:
          type: object
        settings:
          $ref: '#/components/schemas/BookmarkApplicationSettings'
      type: object
      x-okta-defined-as:
        name: bookmark
      x-okta-parent: '#/definitions/Application'
      x-okta-tags:
      - Application
    BookmarkApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/BookmarkApplicationSettingsApplication'
      type: object
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    BookmarkApplicationSettingsApplication:
      properties:
        requestIntegration:
          type: boolean
        url:
          type: string
      type: object
      x-okta-parent: '#/definitions/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    BrowserPluginApplication:
      properties:
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
      type: object
      x-okta-parent: '#/definitions/Application'
      x-okta-tags:
      - Application
      x-openapi-v3-discriminator:
        mapping:
          template_swa: '#/definitions/SwaApplication'
          template_swa3field: '#/definitions/SwaThreeFieldApplication'
        propertyName: name
    CallFactor:
      properties:
        profile:
          $ref: '#/components/schemas/CallFactorProfile'
      type: object
      x-okta-parent: '#/definitions/Factor'
      x-okta-tags:
      - UserFactor
    CallFactorProfile:
      properties:
        phoneExtension:
          type: string
        phoneNumber:
          type: string
      type: object
      x-okta-parent: '#/definitions/FactorProfile'
      x-okta-tags:
      - UserFactor
    ChangePasswordRequest:
      example:
        oldPassword:
          value: value
        newPassword:
          value: value
      properties:
        newPassword:
          $ref: '#/components/schemas/PasswordCredential'
        oldPassword:
          $ref: '#/components/schemas/PasswordCredential'
      type: object
      x-okta-tags:
      - User
    CreateSessionRequest:
      example:
        sessionToken: sessionToken
      properties:
        sessionToken:
          type: string
      type: object
      x-okta-tags:
      - Session
    EmailAddress:
      example:
        value: value
      properties:
        status:
          $ref: '#/components/schemas/EmailStatus'
        type:
          $ref: '#/components/schemas/EmailType'
        value:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - User
    EmailFactor:
      properties:
        profile:
          $ref: '#/components/schemas/EmailFactorProfile'
      type: object
      x-okta-parent: '#/definitions/Factor'
      x-okta-tags:
      - UserFactor
    EmailFactorProfile:
      properties:
        email:
          type: string
      type: object
      x-okta-parent: '#/definitions/FactorProfile'
      x-okta-tags:
      - UserFactor
    EmailStatus:
      enum:
      - VERIFIED
      - UNVERIFIED
      type: string
      x-okta-tags:
      - User
    EmailType:
      enum:
      - PRIMARY
      - SECONDARY
      type: string
      x-okta-tags:
      - User
    Factor:
      example:
        deviceType: deviceType
        rechallengeExistingFactor: true
        _links:
          key: '{}'
        profile: '{}'
        sessionId: sessionId
        userId: userId
        mfaStateTokenId: mfaStateTokenId
        _embedded:
          key: '{}'
        verify:
          answer: answer
          nextPassCode: nextPassCode
          tokenLifetimeSeconds: 6
          passCode: passCode
          activationToken: activationToken
        tokenLifetimeSeconds: 0
        id: id
        device: device
      properties:
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        device:
          type: string
        deviceType:
          readOnly: true
          type: string
        factorType:
          $ref: '#/components/schemas/FactorType'
        id:
          readOnly: true
          type: string
        mfaStateTokenId:
          type: string
        profile:
          type: object
          x-okta-tags:
          - UserFactor
        provider:
          $ref: '#/components/schemas/FactorProvider'
        rechallengeExistingFactor:
          type: boolean
        sessionId:
          type: string
        status:
          $ref: '#/components/schemas/FactorStatus'
        tokenLifetimeSeconds:
          type: integer
        userId:
          type: string
        verify:
          $ref: '#/components/schemas/VerifyFactorRequest'
      type: object
      x-okta-crud:
      - alias: delete
        arguments:
        - dest: factorId
          src: id
        - dest: userId
          parentSrc: id
        operationId: deleteFactor
      x-okta-operations:
      - alias: activate
        arguments:
        - dest: factorId
          src: id
        - dest: userId
          parentSrc: id
        operationId: activateFactor
      - alias: verify
        arguments:
        - dest: factorId
          src: id
        - dest: userId
          parentSrc: id
        operationId: verifyFactor
      x-okta-tags:
      - UserFactor
      x-openapi-v3-discriminator:
        mapping:
          call: '#/definitions/CallFactor'
          email: '#/definitions/EmailFactor'
          push: '#/definitions/PushFactor'
          question: '#/definitions/SecurityQuestionFactor'
          sms: '#/definitions/SmsFactor'
          token: '#/definitions/TokenFactor'
          token:hardware: '#/definitions/HardwareFactor'
          token:software:totp: '#/definitions/TotpFactor'
          u2f: '#/definitions/U2fFactor'
          web: '#/definitions/WebFactor'
        propertyName: factorType
    FactorProfile:
      type: object
      x-okta-tags:
      - UserFactor
    FactorProvider:
      enum:
      - OKTA
      - RSA
      - GOOGLE
      - SYMANTEC
      - DUO
      - YUBICO
      - FIDO
      type: string
      x-okta-tags:
      - UserFactor
    FactorResultType:
      enum:
      - SUCCESS
      - CHALLENGE
      - WAITING
      - FAILED
      - REJECTED
      - TIMEOUT
      - TIME_WINDOW_EXCEEDED
      - PASSCODE_REPLAYED
      - ERROR
      type: string
      x-okta-tags:
      - UserFactor
    FactorStatus:
      enum:
      - PENDING_ACTIVATION
      - ACTIVE
      - INACTIVE
      - NOT_SETUP
      - ENROLLED
      - DISABLED
      - EXPIRED
      type: string
      x-okta-tags:
      - UserFactor
    FactorType:
      enum:
      - push
      - sms
      - call
      - token
      - token:software:totp
      - token:hardware
      - question
      - web
      - email
      - u2f
      - webauthn
      - token:software
      - custom
      type: string
      x-okta-tags:
      - UserFactor
    ForgotPasswordResponse:
      example:
        resetPasswordUrl: resetPasswordUrl
      properties:
        resetPasswordUrl:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - User
    Group:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: '{}'
        _links:
          key: '{}'
        lastMembershipUpdated: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          name: name
          description: description
        objectClass:
        - objectClass
        - objectClass
        id: id
        type: type
      properties:
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastMembershipUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        objectClass:
          items:
            type: string
          readOnly: true
          type: array
        profile:
          $ref: '#/components/schemas/GroupProfile'
        type:
          readOnly: true
          type: string
      type: object
      x-okta-crud:
      - alias: update
        arguments:
        - dest: groupId
          src: id
        - dest: group
          self: true
        operationId: updateGroup
      - alias: delete
        arguments:
        - dest: groupId
          src: id
        operationId: deleteGroup
      x-okta-operations:
      - alias: removeUser
        arguments:
        - dest: groupId
          src: id
        operationId: removeGroupUser
      - alias: listUsers
        arguments:
        - dest: groupId
          src: id
        operationId: listGroupUsers
      x-okta-tags:
      - Group
    GroupProfile:
      example:
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
      type: object
      x-okta-tags:
      - Group
    GroupRule:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: '{}'
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        conditions:
          expression:
            type: type
            value: value
          people:
            groups:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
            users:
              include:
              - include
              - include
              exclude:
              - exclude
              - exclude
        type: type
        actions:
          assignUserToGroups:
            groupIds:
            - groupIds
            - groupIds
        allGroupsValid: true
      properties:
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        actions:
          $ref: '#/components/schemas/GroupRuleAction'
        allGroupsValid:
          type: boolean
        conditions:
          $ref: '#/components/schemas/GroupRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/GroupRuleStatus'
        type:
          type: string
      type: object
      x-okta-crud:
      - alias: update
        arguments:
        - dest: ruleId
          src: id
        - dest: groupRule
          self: true
        operationId: updateRule
      - alias: delete
        arguments:
        - dest: ruleId
          src: id
        operationId: deleteRule
      x-okta-operations:
      - alias: activate
        arguments:
        - dest: ruleId
          src: id
        operationId: activateRule
      - alias: deactivate
        arguments:
        - dest: ruleId
          src: id
        operationId: deactivateRule
      x-okta-tags:
      - GroupRule
    GroupRuleAction:
      example:
        assignUserToGroups:
          groupIds:
          - groupIds
          - groupIds
      properties:
        assignUserToGroups:
          $ref: '#/components/schemas/GroupRuleGroupAssignment'
      type: object
      x-okta-tags:
      - GroupRule
    GroupRuleConditions:
      example:
        expression:
          type: type
          value: value
        people:
          groups:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
          users:
            include:
            - include
            - include
            exclude:
            - exclude
            - exclude
      properties:
        expression:
          $ref: '#/components/schemas/GroupRuleExpression'
        people:
          $ref: '#/components/schemas/GroupRulePeopleCondition'
      type: object
      x-okta-tags:
      - GroupRule
    GroupRuleExpression:
      example:
        type: type
        value: value
      properties:
        type:
          type: string
        value:
          type: string
      type: object
      x-okta-tags:
      - GroupRule
    GroupRuleGroupAssignment:
      example:
        groupIds:
        - groupIds
        - groupIds
      properties:
        groupIds:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - GroupRule
    GroupRuleGroupCondition:
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - GroupRule
    GroupRulePeopleCondition:
      example:
        groups:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
        users:
          include:
          - include
          - include
          exclude:
          - exclude
          - exclude
      properties:
        groups:
          $ref: '#/components/schemas/GroupRuleGroupCondition'
        users:
          $ref: '#/components/schemas/GroupRuleUserCondition'
      type: object
      x-okta-tags:
      - GroupRule
    GroupRuleStatus:
      enum:
      - ACTIVE
      - INACTIVE
      - INVALID
      type: string
      x-okta-tags:
      - GroupRule
    GroupRuleUserCondition:
      example:
        include:
        - include
        - include
        exclude:
        - exclude
        - exclude
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - GroupRule
    HardwareFactor:
      properties:
        profile:
          $ref: '#/components/schemas/HardwareFactorProfile'
      type: object
      x-okta-parent: '#/definitions/Factor'
      x-okta-tags:
      - UserFactor
    HardwareFactorProfile:
      properties:
        credentialId:
          type: string
      type: object
      x-okta-parent: '#/definitions/FactorProfile'
      x-okta-tags:
      - UserFactor
    JsonWebKey:
      example:
        _links:
          key: '{}'
        e: e
        created: 2000-01-23T04:56:07.000+00:00
        use: use
        kid: kid
        x5c:
        - x5c
        - x5c
        expiresAt: 2000-01-23T04:56:07.000+00:00
        n: n
        kty: kty
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        x5t#S256: x5t#S256
        x5t: x5t
        key_ops:
        - key_ops
        - key_ops
        x5u: x5u
        alg: alg
        status: status
      properties:
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        alg:
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        e:
          readOnly: true
          type: string
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        key_ops:
          items:
            type: string
          readOnly: true
          type: array
        kid:
          readOnly: true
          type: string
        kty:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        n:
          readOnly: true
          type: string
        status:
          readOnly: true
          type: string
        use:
          readOnly: true
          type: string
        x5c:
          items:
            type: string
          readOnly: true
          type: array
        x5t:
          readOnly: true
          type: string
        x5t#S256:
          readOnly: true
          type: string
        x5u:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Application
    LogActor:
      example:
        alternateId: alternateId
        displayName: displayName
        detail:
          key: '{}'
        id: id
        type: type
      properties:
        alternateId:
          readOnly: true
          type: string
        detail:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        displayName:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogAuthenticationContext:
      example:
        credentialType:
        - null
        - null
        credentialProvider:
        - null
        - null
        externalSessionId: externalSessionId
        interface: interface
        authenticationStep: 0
        issuer:
          id: id
          type: type
      properties:
        authenticationProvider:
          $ref: '#/components/schemas/LogAuthenticationProvider'
        authenticationStep:
          readOnly: true
          type: integer
        credentialProvider:
          items:
            $ref: '#/components/schemas/LogCredentialProvider'
          readOnly: true
          type: array
        credentialType:
          items:
            $ref: '#/components/schemas/LogCredentialType'
          readOnly: true
          type: array
        externalSessionId:
          readOnly: true
          type: string
        interface:
          readOnly: true
          type: string
        issuer:
          $ref: '#/components/schemas/LogIssuer'
      type: object
      x-okta-tags:
      - Log
    LogAuthenticationProvider:
      enum:
      - OKTA_AUTHENTICATION_PROVIDER
      - ACTIVE_DIRECTORY
      - LDAP
      - FEDERATION
      - SOCIAL
      - FACTOR_PROVIDER
      type: string
      x-okta-tags:
      - Log
    LogClient:
      example:
        zone: zone
        ipAddress: ipAddress
        userAgent:
          os: os
          browser: browser
          rawUserAgent: rawUserAgent
        id: id
        device: device
        geographicalContext:
          country: country
          city: city
          postalCode: postalCode
          state: state
          geolocation:
            lon: 1.4658129805029452
            lat: 6.027456183070403
      properties:
        device:
          readOnly: true
          type: string
        geographicalContext:
          $ref: '#/components/schemas/LogGeographicalContext'
        id:
          readOnly: true
          type: string
        ipAddress:
          readOnly: true
          type: string
        userAgent:
          $ref: '#/components/schemas/LogUserAgent'
        zone:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogCredentialProvider:
      enum:
      - OKTA_AUTHENTICATION_PROVIDER
      - RSA
      - SYMANTEC
      - GOOGLE
      - DUO
      - YUBIKEY
      type: string
      x-okta-tags:
      - Log
    LogCredentialType:
      enum:
      - OTP
      - SMS
      - PASSWORD
      - ASSERTION
      - IWA
      - EMAIL
      - OAUTH2
      - JWT
      type: string
      x-okta-tags:
      - Log
    LogDebugContext:
      example:
        debugData:
          key: '{}'
      properties:
        debugData:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
      type: object
      x-okta-tags:
      - Log
    LogEvent:
      example:
        request:
          ipChain:
          - ip: ip
            source: source
            geographicalContext:
              country: country
              city: city
              postalCode: postalCode
              state: state
              geolocation:
                lon: 1.4658129805029452
                lat: 6.027456183070403
            version: version
          - ip: ip
            source: source
            geographicalContext:
              country: country
              city: city
              postalCode: postalCode
              state: state
              geolocation:
                lon: 1.4658129805029452
                lat: 6.027456183070403
            version: version
        authenticationContext:
          credentialType:
          - null
          - null
          credentialProvider:
          - null
          - null
          externalSessionId: externalSessionId
          interface: interface
          authenticationStep: 0
          issuer:
            id: id
            type: type
        eventType: eventType
        published: 2000-01-23T04:56:07.000+00:00
        securityContext:
          asNumber: 5
          domain: domain
          isp: isp
          isProxy: true
          asOrg: asOrg
        uuid: uuid
        version: version
        target:
        - alternateId: alternateId
          displayName: displayName
          id: id
          detailEntry:
            key: '{}'
          type: type
        - alternateId: alternateId
          displayName: displayName
          id: id
          detailEntry:
            key: '{}'
          type: type
        actor:
          alternateId: alternateId
          displayName: displayName
          detail:
            key: '{}'
          id: id
          type: type
        debugContext:
          debugData:
            key: '{}'
        displayMessage: displayMessage
        client:
          zone: zone
          ipAddress: ipAddress
          userAgent:
            os: os
            browser: browser
            rawUserAgent: rawUserAgent
          id: id
          device: device
          geographicalContext:
            country: country
            city: city
            postalCode: postalCode
            state: state
            geolocation:
              lon: 1.4658129805029452
              lat: 6.027456183070403
        legacyEventType: legacyEventType
        outcome:
          result: result
          reason: reason
        transaction:
          detail:
            key: '{}'
          id: id
          type: type
      properties:
        actor:
          $ref: '#/components/schemas/LogActor'
        authenticationContext:
          $ref: '#/components/schemas/LogAuthenticationContext'
        client:
          $ref: '#/components/schemas/LogClient'
        debugContext:
          $ref: '#/components/schemas/LogDebugContext'
        displayMessage:
          readOnly: true
          type: string
        eventType:
          readOnly: true
          type: string
        legacyEventType:
          readOnly: true
          type: string
        outcome:
          $ref: '#/components/schemas/LogOutcome'
        published:
          format: date-time
          readOnly: true
          type: string
        request:
          $ref: '#/components/schemas/LogRequest'
        securityContext:
          $ref: '#/components/schemas/LogSecurityContext'
        severity:
          $ref: '#/components/schemas/LogSeverity'
        target:
          items:
            $ref: '#/components/schemas/LogTarget'
          readOnly: true
          type: array
        transaction:
          $ref: '#/components/schemas/LogTransaction'
        uuid:
          readOnly: true
          type: string
        version:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogGeographicalContext:
      example:
        country: country
        city: city
        postalCode: postalCode
        state: state
        geolocation:
          lon: 1.4658129805029452
          lat: 6.027456183070403
      properties:
        city:
          readOnly: true
          type: string
        country:
          readOnly: true
          type: string
        geolocation:
          $ref: '#/components/schemas/LogGeolocation'
        postalCode:
          readOnly: true
          type: string
        state:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogGeolocation:
      example:
        lon: 1.4658129805029452
        lat: 6.027456183070403
      properties:
        lat:
          format: double
          readOnly: true
          type: number
        lon:
          format: double
          readOnly: true
          type: number
      type: object
      x-okta-tags:
      - Log
    LogIpAddress:
      example:
        ip: ip
        source: source
        geographicalContext:
          country: country
          city: city
          postalCode: postalCode
          state: state
          geolocation:
            lon: 1.4658129805029452
            lat: 6.027456183070403
        version: version
      properties:
        geographicalContext:
          $ref: '#/components/schemas/LogGeographicalContext'
        ip:
          readOnly: true
          type: string
        source:
          readOnly: true
          type: string
        version:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogIssuer:
      example:
        id: id
        type: type
      properties:
        id:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogOutcome:
      example:
        result: result
        reason: reason
      properties:
        reason:
          readOnly: true
          type: string
        result:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogRequest:
      example:
        ipChain:
        - ip: ip
          source: source
          geographicalContext:
            country: country
            city: city
            postalCode: postalCode
            state: state
            geolocation:
              lon: 1.4658129805029452
              lat: 6.027456183070403
          version: version
        - ip: ip
          source: source
          geographicalContext:
            country: country
            city: city
            postalCode: postalCode
            state: state
            geolocation:
              lon: 1.4658129805029452
              lat: 6.027456183070403
          version: version
      properties:
        ipChain:
          items:
            $ref: '#/components/schemas/LogIpAddress'
          readOnly: true
          type: array
      type: object
      x-okta-tags:
      - Log
    LogSecurityContext:
      example:
        asNumber: 5
        domain: domain
        isp: isp
        isProxy: true
        asOrg: asOrg
      properties:
        asNumber:
          readOnly: true
          type: integer
        asOrg:
          readOnly: true
          type: string
        domain:
          readOnly: true
          type: string
        isProxy:
          readOnly: true
          type: boolean
        isp:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogSeverity:
      enum:
      - DEBUG
      - INFO
      - WARN
      - ERROR
      type: string
      x-okta-tags:
      - Log
    LogTarget:
      example:
        alternateId: alternateId
        displayName: displayName
        id: id
        detailEntry:
          key: '{}'
        type: type
      properties:
        alternateId:
          readOnly: true
          type: string
        detailEntry:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        displayName:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogTransaction:
      example:
        detail:
          key: '{}'
        id: id
        type: type
      properties:
        detail:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        id:
          readOnly: true
          type: string
        type:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    LogUserAgent:
      example:
        os: os
        browser: browser
        rawUserAgent: rawUserAgent
      properties:
        browser:
          readOnly: true
          type: string
        os:
          readOnly: true
          type: string
        rawUserAgent:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Log
    OAuthApplicationCredentials:
      properties:
        oauthClient:
          $ref: '#/components/schemas/ApplicationCredentialsOAuthClient'
      type: object
      x-okta-parent: '#/definitions/ApplicationCredentials'
      x-okta-tags:
      - Application
    OAuthEndpointAuthenticationMethod:
      enum:
      - none
      - client_secret_post
      - client_secret_basic
      - client_secret_jwt
      type: string
      x-okta-tags:
      - Application
    OAuthGrantType:
      enum:
      - authorization_code
      - implicit
      - password
      - refresh_token
      - client_credentials
      type: string
      x-okta-tags:
      - Application
    OAuthResponseType:
      enum:
      - code
      - token
      - id_token
      type: string
      x-okta-tags:
      - Application
    OpenIdConnectApplication:
      properties:
        credentials:
          $ref: '#/components/schemas/OAuthApplicationCredentials'
        name:
          type: object
        settings:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettings'
      type: object
      x-okta-defined-as:
        name: oidc_client
      x-okta-parent: '#/definitions/Application'
      x-okta-tags:
      - Application
    OpenIdConnectApplicationConsentMethod:
      enum:
      - REQUIRED
      - TRUSTED
      type: string
      x-okta-tags:
      - Application
    OpenIdConnectApplicationSettings:
      properties:
        oauthClient:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClient'
      type: object
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    OpenIdConnectApplicationSettingsClient:
      properties:
        application_type:
          $ref: '#/components/schemas/OpenIdConnectApplicationType'
        client_uri:
          type: string
        consent_method:
          $ref: '#/components/schemas/OpenIdConnectApplicationConsentMethod'
        grant_types:
          items:
            $ref: '#/components/schemas/OAuthGrantType'
          type: array
        logo_uri:
          type: string
        policy_uri:
          type: string
        redirect_uris:
          items:
            type: string
          type: array
        response_types:
          items:
            $ref: '#/components/schemas/OAuthResponseType'
          type: array
        tos_uri:
          type: string
      type: object
      x-okta-tags:
      - Application
    OpenIdConnectApplicationType:
      enum:
      - web
      - native
      - browser
      - service
      type: string
      x-okta-tags:
      - Application
    PasswordCredential:
      example:
        value: value
      properties:
        value:
          format: password
          type: string
      type: object
      x-okta-tags:
      - User
    PushFactor:
      properties:
        profile:
          $ref: '#/components/schemas/PushFactorProfile'
      type: object
      x-okta-parent: '#/definitions/Factor'
      x-okta-tags:
      - UserFactor
    PushFactorProfile:
      properties:
        credentialId:
          type: string
        deviceType:
          readOnly: true
          type: string
        name:
          type: string
        platform:
          readOnly: true
          type: string
        version:
          type: string
      type: object
      x-okta-parent: '#/definitions/FactorProfile'
      x-okta-tags:
      - UserFactor
    RecoveryQuestionCredential:
      example:
        answer: answer
        question: question
      properties:
        answer:
          type: string
        question:
          type: string
      type: object
      x-okta-tags:
      - User
    ResetPasswordToken:
      example:
        resetPasswordUrl: resetPasswordUrl
      properties:
        resetPasswordUrl:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - User
    Role:
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: '{}'
        created: 2000-01-23T04:56:07.000+00:00
        description: description
        id: id
        label: label
        type: type
      properties:
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        description:
          type: string
        id:
          readOnly: true
          type: string
        label:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/RoleStatus'
        type:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - User
    RoleStatus:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
      x-okta-tags:
      - User
    SamlApplication:
      properties:
        settings:
          $ref: '#/components/schemas/SamlApplicationSettings'
      type: object
      x-okta-parent: '#/definitions/Application'
      x-okta-tags:
      - Application
    SamlApplicationSettings:
      properties:
        signOn:
          $ref: '#/components/schemas/SamlApplicationSettingsSignOn'
      type: object
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    SamlApplicationSettingsSignOn:
      properties:
        assertionSigned:
          type: boolean
        attributeStatements:
          items:
            $ref: '#/components/schemas/SamlAttributeStatement'
          type: array
        audience:
          type: string
        audienceOverride:
          type: string
        authnContextClassRef:
          type: string
        defaultRelayState:
          type: string
        destination:
          type: string
        destinationOverride:
          type: string
        digestAlgorithm:
          type: string
        honorForceAuthn:
          type: boolean
        idpIssuer:
          type: string
        recipient:
          type: string
        recipientOverride:
          type: string
        requestCompressed:
          type: boolean
        responseSigned:
          type: boolean
        signatureAlgorithm:
          type: string
        spIssuer:
          type: string
        ssoAcsUrl:
          type: string
        ssoAcsUrlOverride:
          type: string
        subjectNameIdFormat:
          type: string
        subjectNameIdTemplate:
          type: string
      type: object
      x-okta-tags:
      - Application
    SamlAttributeStatement:
      properties:
        name:
          type: string
        namespace:
          type: string
        type:
          type: string
        values:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Application
    SchemeApplicationCredentials:
      properties:
        password:
          $ref: '#/components/schemas/PasswordCredential'
        revealPassword:
          type: boolean
        scheme:
          $ref: '#/components/schemas/ApplicationCredentialsScheme'
        signing:
          $ref: '#/components/schemas/ApplicationCredentialsSigning'
        userName:
          type: string
      type: object
      x-okta-parent: '#/definitions/ApplicationCredentials'
      x-okta-tags:
      - Application
    SecurePasswordStoreApplication:
      properties:
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
        name:
          type: object
        settings:
          $ref: '#/components/schemas/SecurePasswordStoreApplicationSettings'
      type: object
      x-okta-defined-as:
        name: template_sps
      x-okta-parent: '#/definitions/Application'
      x-okta-tags:
      - Application
    SecurePasswordStoreApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/SecurePasswordStoreApplicationSettingsApplication'
      type: object
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    SecurePasswordStoreApplicationSettingsApplication:
      properties:
        optionalField1:
          type: string
        optionalField1Value:
          type: string
        optionalField2:
          type: string
        optionalField2Value:
          type: string
        optionalField3:
          type: string
        optionalField3Value:
          type: string
        passwordField:
          type: string
        url:
          type: string
        usernameField:
          type: string
      type: object
      x-okta-parent: '#/definitions/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    SecurityQuestion:
      example:
        answer: answer
        question: question
        questionText: questionText
      properties:
        answer:
          type: string
        question:
          type: string
        questionText:
          type: string
      type: object
      x-okta-tags:
      - UserFactor
    SecurityQuestionFactor:
      properties:
        profile:
          $ref: '#/components/schemas/SecurityQuestionFactorProfile'
      type: object
      x-okta-parent: '#/definitions/Factor'
      x-okta-tags:
      - UserFactor
    SecurityQuestionFactorProfile:
      properties:
        answer:
          type: string
        question:
          type: string
        questionText:
          type: string
      type: object
      x-okta-parent: '#/definitions/FactorProfile'
      x-okta-tags:
      - UserFactor
    Session:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        lastFactorVerification: 2000-01-23T04:56:07.000+00:00
        idp:
          id: id
        _links:
          key: '{}'
        amr:
        - null
        - null
        id: id
        login: login
        userId: userId
        expiresAt: 2000-01-23T04:56:07.000+00:00
        lastPasswordVerification: 2000-01-23T04:56:07.000+00:00
      properties:
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        amr:
          items:
            $ref: '#/components/schemas/SessionAuthenticationMethod'
          readOnly: true
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        idp:
          $ref: '#/components/schemas/SessionIdentityProvider'
        lastFactorVerification:
          format: date-time
          readOnly: true
          type: string
        lastPasswordVerification:
          format: date-time
          readOnly: true
          type: string
        login:
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/SessionStatus'
        userId:
          readOnly: true
          type: string
      type: object
      x-okta-crud:
      - alias: read
        arguments:
        - dest: sessionId
          src: id
        operationId: getSession
      - alias: delete
        arguments:
        - dest: sessionId
          src: id
        operationId: endSession
      x-okta-operations:
      - alias: refresh
        arguments:
        - dest: sessionId
          src: id
        operationId: refreshSession
      x-okta-tags:
      - Session
    SessionAuthenticationMethod:
      enum:
      - pwd
      - swk
      - hwk
      - otp
      - sms
      - tel
      - geo
      - fpt
      - kba
      - mfa
      type: string
      x-okta-tags:
      - Session
    SessionIdentityProvider:
      example:
        id: id
      properties:
        id:
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/SessionIdentityProviderType'
      type: object
      x-okta-tags:
      - Session
    SessionIdentityProviderType:
      enum:
      - ACTIVE_DIRECTORY
      - LDAP
      - OKTA
      - FEDERATION
      - SOCIAL
      type: string
      x-okta-tags:
      - Session
    SessionStatus:
      enum:
      - ACTIVE
      - MFA_ENROLL
      - MFA_REQUIRED
      type: string
      x-okta-tags:
      - Session
    SmsFactor:
      properties:
        profile:
          $ref: '#/components/schemas/SmsFactorProfile'
      type: object
      x-okta-parent: '#/definitions/Factor'
      x-okta-tags:
      - UserFactor
    SmsFactorProfile:
      properties:
        phoneNumber:
          type: string
      type: object
      x-okta-parent: '#/definitions/FactorProfile'
      x-okta-tags:
      - UserFactor
    SwaApplication:
      properties:
        name:
          type: object
        settings:
          $ref: '#/components/schemas/SwaApplicationSettings'
      type: object
      x-okta-defined-as:
        name: template_swa
      x-okta-parent: '#/definitions/BrowserPluginApplication'
      x-okta-tags:
      - Application
    SwaApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/SwaApplicationSettingsApplication'
      type: object
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    SwaApplicationSettingsApplication:
      properties:
        buttonField:
          type: string
        loginUrlRegex:
          type: string
        passwordField:
          type: string
        url:
          type: string
        usernameField:
          type: string
      type: object
      x-okta-parent: '#/definitions/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    SwaThreeFieldApplication:
      properties:
        name:
          type: object
        settings:
          $ref: '#/components/schemas/SwaThreeFieldApplicationSettings'
      type: object
      x-okta-defined-as:
        name: template_swa3field
      x-okta-parent: '#/definitions/BrowserPluginApplication'
      x-okta-tags:
      - Application
    SwaThreeFieldApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/SwaThreeFieldApplicationSettingsApplication'
      type: object
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    SwaThreeFieldApplicationSettingsApplication:
      properties:
        buttonSelector:
          type: string
        extraFieldSelector:
          type: string
        extraFieldValue:
          type: string
        loginUrlRegex:
          type: string
        passwordSelector:
          type: string
        targetUrl:
          type: string
        userNameSelector:
          type: string
      type: object
      x-okta-parent: '#/definitions/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    TempPassword:
      example:
        tempPassword: tempPassword
      properties:
        tempPassword:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - User
    TokenFactor:
      properties:
        profile:
          $ref: '#/components/schemas/TokenFactorProfile'
      type: object
      x-okta-parent: '#/definitions/Factor'
      x-okta-tags:
      - UserFactor
    TokenFactorProfile:
      properties:
        credentialId:
          type: string
      type: object
      x-okta-parent: '#/definitions/FactorProfile'
      x-okta-tags:
      - UserFactor
    TotpFactor:
      properties:
        profile:
          $ref: '#/components/schemas/TotpFactorProfile'
      type: object
      x-okta-parent: '#/definitions/Factor'
      x-okta-tags:
      - UserFactor
    TotpFactorProfile:
      properties:
        credentialId:
          type: string
      type: object
      x-okta-parent: '#/definitions/FactorProfile'
      x-okta-tags:
      - UserFactor
    U2fFactor:
      properties:
        profile:
          type: object
          x-okta-parent: '#/definitions/FactorProfile'
          x-okta-tags:
          - UserFactor
      type: object
      x-okta-parent: '#/definitions/Factor'
      x-okta-tags:
      - UserFactor
    U2fFactorProfile:
      type: object
      x-okta-parent: '#/definitions/FactorProfile'
      x-okta-tags:
      - UserFactor
    User:
      example:
        lastLogin: 2000-01-23T04:56:07.000+00:00
        _links:
          key: '{}'
        credentials:
          emails:
          - value: value
          - value: value
          password:
            value: value
          provider:
            name: name
          recovery_question:
            answer: answer
            question: question
        created: 2000-01-23T04:56:07.000+00:00
        profile:
          firstName: firstName
          lastName: lastName
          mobilePhone: mobilePhone
          secondEmail: secondEmail
          login: login
          email: email
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        passwordChanged: 2000-01-23T04:56:07.000+00:00
        _embedded:
          key: '{}'
        statusChanged: 2000-01-23T04:56:07.000+00:00
        id: id
        activated: 2000-01-23T04:56:07.000+00:00
      properties:
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        activated:
          format: date-time
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        id:
          readOnly: true
          type: string
        lastLogin:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        passwordChanged:
          format: date-time
          readOnly: true
          type: string
        profile:
          $ref: '#/components/schemas/UserProfile'
        status:
          $ref: '#/components/schemas/UserStatus'
        statusChanged:
          format: date-time
          readOnly: true
          type: string
        transitioningToStatus:
          $ref: '#/components/schemas/UserStatus'
      type: object
      x-okta-crud:
      - alias: create
        arguments:
        - dest: user
          self: true
        operationId: createUser
      - alias: read
        arguments: []
        operationId: getUser
      - alias: update
        arguments:
        - dest: userId
          src: id
        - dest: user
          self: true
        operationId: updateUser
      - alias: delete
        arguments:
        - dest: userId
          src: id
        - dest: user
          self: true
        operationId: deactivateOrDeleteUser
      x-okta-operations:
      - alias: endAllSessions
        arguments:
        - dest: userId
          src: id
        operationId: endAllUserSessions
      - alias: listAppLinks
        arguments:
        - dest: userId
          src: id
        operationId: listAppLinks
      - alias: changePassword
        arguments:
        - dest: userId
          src: id
        operationId: changePassword
      - alias: changeRecoveryQuestion
        arguments:
        - dest: userId
          src: id
        operationId: changeRecoveryQuestion
      - alias: forgotPassword
        arguments:
        - dest: userId
          src: id
        operationId: forgotPassword
      - alias: listRoles
        arguments:
        - dest: userId
          src: id
        operationId: listAssignedRoles
      - alias: addRole
        arguments:
        - dest: userId
          src: id
        operationId: addRoleToUser
      - alias: removeRole
        arguments:
        - dest: userId
          src: id
        operationId: removeRoleFromUser
      - alias: listGroupTargetsForRole
        arguments:
        - dest: userId
          src: id
        operationId: listGroupTargetsForRole
      - alias: removeGroupTargetFromRole
        arguments:
        - dest: userId
          src: id
        operationId: removeGroupTargetFromRole
      - alias: addGroupTargetToRole
        arguments:
        - dest: userId
          src: id
        operationId: addGroupTargetToRole
      - alias: listGroups
        arguments:
        - dest: userId
          src: id
        operationId: listUserGroups
      - alias: activate
        arguments:
        - dest: userId
          src: id
        operationId: activateUser
      - alias: deactivate
        arguments:
        - dest: userId
          src: id
        operationId: deactivateUser
      - alias: suspend
        arguments:
        - dest: userId
          src: id
        operationId: suspendUser
      - alias: unsuspend
        arguments:
        - dest: userId
          src: id
        operationId: unsuspendUser
      - alias: resetPassword
        arguments:
        - dest: userId
          src: id
        operationId: resetPassword
      - alias: expirePassword
        arguments:
        - dest: userId
          src: id
        operationId: expirePassword
      - alias: unlock
        arguments:
        - dest: userId
          src: id
        operationId: unlockUser
      - alias: resetFactors
        arguments:
        - dest: userId
          src: id
        operationId: resetAllFactors
      - alias: addToGroup
        arguments:
        - dest: userId
          src: id
        operationId: addUserToGroup
      - alias: addFactor
        arguments:
        - dest: userId
          src: id
        operationId: addFactor
      - alias: listSupportedFactors
        arguments:
        - dest: userId
          src: id
        operationId: listSupportedFactors
      - alias: listFactors
        arguments:
        - dest: userId
          src: id
        operationId: listFactors
      - alias: listSupportedSecurityQuestions
        arguments:
        - dest: userId
          src: id
        operationId: listSupportedSecurityQuestions
      - alias: getFactor
        arguments:
        - dest: userId
          src: id
        operationId: getFactor
      x-okta-tags:
      - User
    UserActivationToken:
      example:
        activationUrl: activationUrl
        activationToken: activationToken
      properties:
        activationToken:
          readOnly: true
          type: string
        activationUrl:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - User
    UserCredentials:
      example:
        emails:
        - value: value
        - value: value
        password:
          value: value
        provider:
          name: name
        recovery_question:
          answer: answer
          question: question
      properties:
        emails:
          items:
            $ref: '#/components/schemas/EmailAddress'
          type: array
        password:
          $ref: '#/components/schemas/PasswordCredential'
        provider:
          $ref: '#/components/schemas/AuthenticationProvider'
        recovery_question:
          $ref: '#/components/schemas/RecoveryQuestionCredential'
      type: object
      x-okta-tags:
      - User
    UserNextLogin:
      enum:
      - changePassword
      type: string
      x-okta-tags:
      - User
    UserProfile:
      example:
        firstName: firstName
        lastName: lastName
        mobilePhone: mobilePhone
        secondEmail: secondEmail
        login: login
        email: email
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        login:
          type: string
        mobilePhone:
          type: string
        secondEmail:
          type: string
      type: object
      x-okta-extensible: true
      x-okta-tags:
      - User
    UserStatus:
      enum:
      - STAGED
      - PROVISIONED
      - ACTIVE
      - RECOVERY
      - PASSWORD_EXPIRED
      - LOCKED_OUT
      - DEPROVISIONED
      - SUSPENDED
      type: string
      x-okta-tags:
      - User
    VerifyFactorRequest:
      example:
        answer: answer
        nextPassCode: nextPassCode
        tokenLifetimeSeconds: 6
        passCode: passCode
        activationToken: activationToken
      properties:
        activationToken:
          type: string
        answer:
          type: string
        nextPassCode:
          type: string
        passCode:
          type: string
        tokenLifetimeSeconds:
          type: integer
      type: object
      x-okta-tags:
      - UserFactor
    VerifyFactorResponse:
      example:
        factorResultMessage: factorResultMessage
        _embedded:
          key: '{}'
        _links:
          key: '{}'
        expiresAt: 2000-01-23T04:56:07.000+00:00
      properties:
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        factorResult:
          $ref: '#/components/schemas/FactorResultType'
        factorResultMessage:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - UserFactor
    WebFactor:
      properties:
        profile:
          $ref: '#/components/schemas/WebFactorProfile'
      type: object
      x-okta-parent: '#/definitions/Factor'
      x-okta-tags:
      - UserFactor
    WebFactorProfile:
      properties:
        credentialId:
          type: string
      type: object
      x-okta-parent: '#/definitions/FactorProfile'
      x-okta-tags:
      - UserFactor
    WsFederationApplication:
      properties:
        name:
          type: object
        settings:
          $ref: '#/components/schemas/WsFederationApplicationSettings'
      type: object
      x-okta-defined-as:
        name: template_wsfed
      x-okta-parent: '#/definitions/Application'
      x-okta-tags:
      - Application
    WsFederationApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/WsFederationApplicationSettingsApplication'
      type: object
      x-okta-parent: '#/definitions/ApplicationSettings'
      x-okta-tags:
      - Application
    WsFederationApplicationSettingsApplication:
      properties:
        attributeStatements:
          type: string
        audienceRestriction:
          type: string
        authnContextClassRef:
          type: string
        groupFilter:
          type: string
        groupName:
          type: string
        groupValueFormat:
          type: string
        nameIDFormat:
          type: string
        realm:
          type: string
        siteURL:
          type: string
        usernameAttribute:
          type: string
        wReplyOverride:
          type: boolean
        wReplyURL:
          type: string
      type: object
      x-okta-parent: '#/definitions/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
  securitySchemes:
    api_token:
      description: SSWS {API Token}
      in: header
      name: Authorization
      type: apiKey
